-- This file was generated using Luraph Obfuscator v13.5.9

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then v27=nil;v27=function(...)return {...},v11("#",...);end;v28=nil;v28=function()local v38=471 -(27 + 444);local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if ((1631 -(564 + 1065))~=v38) then else local v68=0 -0;while true do if (v68~=(1187 -(1163 + 23))) then else v38=6 -3;break;end if ((479 -(305 + 174))~=v68) then else v43=nil;v44=nil;v68=1;end end end if (v38~=(0 -0)) then else v39=0;v40=nil;v38=1;end if (v38~=3) then else v45=nil;while true do if (v39~=(1468 -(1250 + 218))) then else local v77=0 + 0;while true do if (v77==1) then v42={};v39=1;break;end if (v77==(1159 -(697 + 462))) then local v99=0;while true do if ((1155 -(949 + 206))~=v99) then else v40={};v41={};v99=1 + 0;end if (v99~=(3 -2)) then else v77=1;break;end end end end end if (v39~=(2 -1)) then else v43={v40,v41,nil,v42};v44=v23();v45={};v39=9 -7;end if (v39==2) then local v78=1296 -(66 + 1230);local v79;while true do if (v78==0) then v79=0;while true do if (v79==(1 + 0)) then for v103=1,v23() do local v104=0;local v105;local v106;while true do if (v104~=(0 + 0)) then else local v109=0;while true do if (v109~=0) then else v105=0;v106=nil;v109=1 + 0;end if (v109~=1) then else v104=1;break;end end end if (v104~=1) then else while true do if (v105~=(0 -0)) then else v106=v21();if (v20(v106,1,1502 -(130 + 1371))~=(112 -(68 + 44))) then else local v116=297 -(292 + 5);local v117;local v118;local v119;local v120;local v121;while true do if (v116~=0) then else v117=0;v118=nil;v116=1330 -(540 + 789);end if (v116==(1 + 1)) then v121=nil;while true do if (v117==(54 -(9 + 44))) then local v197=0 -0;while true do if (0~=v197) then else v120=nil;v121=nil;v197=1 + 0;end if (v197~=(4 -3)) then else v117=2;break;end end end if ((1 + 1)~=v117) then else while true do if (v118~=3) then else if (v20(v120,3,3)~=1) then else v121[6 -2]=v45[v121[4]];end v40[v103]=v121;break;end if (v118~=(2 + 0)) then else local v216=0 -0;while true do if (v216~=(1 + 0)) then else v118=295 -(33 + 259);break;end if ((1570 -(876 + 694))~=v216) then else if (v20(v120,1,1 + 0)==(1 + 0)) then v121[1181 -(859 + 320)]=v45[v121[2]];end if (v20(v120,1547 -(323 + 1222),2)~=1) then else v121[10 -7]=v45[v121[5 -2]];end v216=1 + 0;end end end if (v118==(775 -(501 + 274))) then local v217=0;local v218;while true do if (v217==(716 -(649 + 67))) then v218=0;while true do if (v218==(4 -3)) then v118=1 + 0;break;end if (v218~=(0 -0)) then else v119=v20(v106,1131 -(433 + 696),3 + 0);v120=v20(v106,7 -3,6);v218=2 -1;end end break;end end end if (v118==1) then v121={v22(),v22(),nil,nil};if (v119==(148 -(52 + 96))) then local v240=0;local v241;local v242;while true do if (v240~=(0 + 0)) then else local v254=768 -(449 + 319);while true do if (v254~=(0 + 0)) then else v241=0;v242=nil;v254=1 -0;end if (1~=v254) then else v240=1;break;end end end if (v240==(1 + 0)) then while true do if (v241~=0) then else v242=0;while true do if ((0 -0)==v242) then v121[3 + 0]=v22();v121[6 -2]=v22();break;end end break;end end break;end end elseif (v119==(1 + 0)) then v121[8 -5]=v23();elseif (v119==2) then v121[3 + 0]=v23() -(2^(718 -(526 + 176)));elseif (v119==(1 + 2)) then local v263=0 -0;local v264;local v265;while true do if (v263~=1) then else while true do if (v264~=(0 -0)) then else v265=0 -0;while true do if (v265~=(42 -(27 + 15))) then else v121[3 + 0]=v23() -((602 -(114 + 486))^16);v121[6 -2]=v22();break;end end break;end end break;end if (v263==(0 + 0)) then v264=0;v265=nil;v263=2 -1;end end end v118=3 -1;end end break;end if (v117==(1359 -(866 + 493))) then local v198=0 + 0;while true do if (v198==1) then v117=1 -0;break;end if (v198==0) then v118=895 -(827 + 68);v119=nil;v198=1;end end end end break;end if (v116==(1 + 0)) then v119=nil;v120=nil;v116=2 + 0;end end end break;end end break;end end end v39=2 + 1;break;end if (v79==0) then local v102=0;while true do if (v102~=0) then else for v110=1 -0,v44 do local v111=0;local v112;local v113;local v114;while true do if (0==v111) then v112=0;v113=nil;v111=2 -1;end if (v111~=(1 -0)) then else v114=nil;while true do if ((0 + 0)~=v112) then else local v122=0 + 0;local v123;while true do if (0==v122) then v123=0;while true do if (v123~=1) then else v112=1 + 0;break;end if (v123==0) then local v204=889 -(592 + 297);while true do if (v204~=0) then else v113=v21();v114=nil;v204=1;end if (v204==1) then v123=1 + 0;break;end end end end break;end end end if (v112==1) then if (v113==(1 + 0)) then v114=v21()~=0;elseif (v113==2) then v114=v24();elseif (v113~=(1595 -(1556 + 36))) then else v114=v25();end v45[v110]=v114;break;end end break;end end end v43[3]=v21();v102=2 -1;end if (v102==1) then v79=1 + 0;break;end end end end break;end end end if (v39~=3) then else for v80=1,v23() do v41[v80-1]=v28();end for v82=1718 -(1592 + 125),v23() do v42[v82]=v23();end return v43;end end break;end if (v38==(1 -0)) then v41=nil;v42=nil;v38=6 -4;end end end;v17=5;end if (v17==3) then v24=function()local v46=0 -0;local v47;local v48;while true do if (v46==(50 -((269 -(14 + 250)) + 44))) then return (( -(1 + 1) * v20(v48,1179 -(608 + 539))) + (1 -0)) * (((1 + 1) -0)^(v20(v48,1091 -(205 + 865),31) -1023)) * ((((v20(v48,1 + 0,20) * ((2 + 0)^32)) + v47)/((5 -3)^(11 + 41))) + (1924 -(1308 + 615)));end if (v46==(0 -0)) then v47=v23();v48=v23();v46=973 -(18 + 129 + 825);end end end;v25=nil;v25=function(v30)local v49=0 + (0 -0);local v50;local v51;while true do if (v49==(3 + 0)) then return v6(v51);end if ((1 -0)==v49) then v50=v3(v15,v18,(v18 + v30) -(4 -3));v18=v18 + v30;v49=2 + 0;end if (v49==(95 -(19 + (1508 -(775 + 659))))) then v51={};for v69=(1 -0) + 0, #v50 do v51[v69]=v2(v1(v3(v50,v69,v69)));end v49=(6 + 1) -4;end if (v49==0) then v50=nil;if  not v30 then v30=v23();if (v30==(0 -0)) then return "";end end v49=1 -0;end end end;v26=v23;v17=4;end if (5==v17) then v29=nil;v29=function(v31,v32,v33)local v52=0;local v53;local v54;local v55;while true do if (v52==1) then v55=v31[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v11("#",...) -1;local function v76()local v84=v53;local v85=v54;local v86=v55;local v87=v27;local v88={};local v89={};local v90={};for v96=1186 -(988 + 198),v75 do if ((v96>=v86) or (1272>4387)) then v88[v96-v86]=v74[v96 + 1];else v90[v96]=v74[v96 + (144 -(75 + (251 -183)))];end end local v91=(v75-v86) + (2 -1);local v92;local v93;while true do local v97=1715 -((1820 -(157 + 312)) + 364);local v98;while true do if ((v97==(1573 -(623 + 950))) or ((9036 -4511)==(3064 + 179))) then v98=0;while true do if (((766 + 1602)<=4651) and (v98==(3 -2))) then if ((((5443 -(528 + 153)) -(405 + 1331))>(529 + 769)) and (v93<=(3 + 2 + 10))) then if (((3122 -(117 + 623))>(2421 -1404)) and (v93<=7)) then if (((738 + 745)<((2362 -(1578 + 253)) + 3173)) and (v93<=3)) then if ((v93<=(1 + 0)) or ((2699 -(459 + 1181))>4220)) then if ((((4714 -(889 + 654)) -(565 + 127))==(97 + 2382)) and (v93>(0 -0))) then local v125=0 + 0;local v126;local v127;local v128;while true do if (((1482 + 2198)<(5837 -((2339 -(693 + 11)) + 132))) and (v125==(0 -0))) then v126=1227 -(542 + (3092 -2407));v127=nil;v125=1 + 0;end if ((v125==((2 -1) + 0)) or ((629 -399)>=(2419 -1227))) then v128=nil;while true do if ((v126==(0 + 0)) or (((1484 -(14 + 491)) -(245 + (1459 -(167 + 680))))>=(4494 -(96 + 10)))) then v127=0 -0;v128=nil;v126=1554 -(291 + 1262);end if ((v126==(1 + 0)) or ((5221 -((118 -80) + 211))==4356)) then while true do if ((v127==(106 -(56 + 50))) or ((1405 -(633 + 516))>(951 + 1137))) then v128=v92[2];do return v90[v128](v12(v90,v128 + (1278 -(196 + 1081)),v92[101 -(5 + 93)]));end break;end end break;end end break;end end else local v129=1923 -(1440 + 483);local v130;local v131;while true do if (((5507 -(57 + 1519))>=951) and (0==v129)) then v130=(2149 -(101 + 859)) -(833 + 356);v131=nil;v129=1;end if ((v129==1) or ((5570 -(1353 + 271))<=(4241 -(921 + (427 -291))))) then while true do if (((4330 -(1028 + 965))<(3845 -(40 + 73))) and (v130==((1253 -584) -(107 + 562)))) then v131=v92[(4 + 3) -5];v90[v131]=v90[v131](v12(v90,v131 + 1 + 0,v73));break;end end break;end end end elseif ((v93>(687 -(232 + 453))) or ((4368 -(816 + 997))<(9241 -6832))) then local v132=0 + 0;local v133;local v134;local v135;local v136;while true do if (((4021 -1292)>=(1316 -526)) and (v132==(1024 -((330 -153) + 846)))) then local v199=0 + (404 -(152 + 252));while true do if (((3137 -(7434 -5209))<(240 + 2868)) and ((1 + 0)==v199)) then v132=1713 -(304 + (2720 -1313));break;end if (((2985 -(25 + 141))>(3140 -(784 + 567))) and (((634 -(5 + 629)) -0)==v199)) then v73=(v135 + v133) -(1806 -(679 + 1126));v136=0 -(923 -(545 + 378));v199=450 -(100 + 349);end end end if ((((421 + 2635) -1457)<(3946 -(607 + (1220 -737)))) and (v132==(1 + 1))) then for v205=v133,v73 do local v206=0;local v207;while true do if (((9246 -5744)==(10948 -7446)) and (v206==(1061 -(350 + 711)))) then v207=0;while true do if (((6839 -(1131 + 753))>=2117) and (v207==(0 -0))) then v136=v136 + (1 -(0 + 0));v90[v205]=v134[v136];break;end end break;end end end break;end if ((v132==(0 + 0)) or (3317<(4428 -(179 + 1200)))) then v133=v92[2];v134,v135=v87(v90[v133](v90[v133 + 1 + 0]));v132=1;end end else local v137=0 + 0;local v138;local v139;local v140;local v141;local v142;while true do if (((4584 -(147 + 1783))==(2653 + 1)) and (v137==(4 -1))) then if (((2720 -(1038 + 784))==(2256 -1358)) and v142) then local v213=0 -0;local v214;while true do if (((2231 + 2494)==4725) and (v213==(0 + 0))) then v214=0;while true do if ((2157==(3375 -1218)) and (v214==(0 -0))) then v90[v140]=v142;v72=v92[401 -(386 + 12)];break;end end break;end end else v72=v72 + (3 -2);end break;end if ((v137==(896 -(112 + (2289 -1506)))) or ((2402 -(9 + 594))<(735 + 306))) then v140=v138 + (259 -(4 + 253));v141={v90[v138](v90[v138 + ((1354 -(548 + 803)) -2)],v90[v140])};v137=(92 + 144) -(120 + 114);end if ((253==(2221 -(635 + 1333))) and (v137==(0 -0))) then local v200=0 -0;while true do if (((2433 + 2550)>=(594 + 2832)) and (v200==(1 + 0))) then v137=3 -2;break;end if (((0 + 0)==v200) or ((1830 + 3069)==(8087 -5632))) then v138=v92[2];v139=v92[4];v200=3 -2;end end end if ((v137==(1744 -(636 + 1106))) or ((321 + 1183)==(5512 -(152 + 549 + (4565 -3297))))) then for v208=63 -(46 + 16),v139 do v90[v140 + v208]=v141[v208];end v142=v141[1];v137=1434 -(1042 + 389);end end end elseif ((v93<=(824 -(206 + 613))) or ((5336 -3240)<(4894 -3498))) then if (((2164 + 1676)==3840) and (v93>(1 + 3))) then v90[v92[2]][v92[3 -(0 + 0)]]=v90[v92[4]];else local v144=0;local v145;local v146;local v147;while true do if (((0 -0)==v144) or (1327<=824)) then v145=0;v146=nil;v144=1;end if ((((6649 -4022) + 868)<=(11706 -(28191 -20350))) and (v144==(3 -2))) then v147=nil;while true do if ((v145==(866 -(334 + 532))) or ((2592 -(940 + (1495 -(386 + 600))))>(12051 -7652))) then v146=v92[2];v147={};v145=1;end if ((v145==(1 + 0)) or ((2965 -(154 + 1511))>(5280 -2381))) then for v230=1 + 0, #v89 do local v231=0;local v232;local v233;while true do if (((105 -69)==(392 -((105 -41) + 292))) and (v231==((0 -0) + 0))) then v232=0;v233=nil;v231=2 -1;end if ((4572>=(1789 -1196)) and (v231==(3 -2))) then while true do if (((7074 -3278)<=(17087 -12148)) and (v232==(0 + 0 + 0))) then v233=v89[v230];for v266=1556 -(384 + 1172), #v233 do local v267=(0 -0) + 0;local v268;local v269;local v270;local v271;while true do if (((7958 -5826)<=(2177 + 1957)) and (v267==((404 + 395) -(78 + 719)))) then while true do if (((469 + 2325)>=(1068 -(2247 -(910 + 715)))) and (0==v268)) then local v286=0 -0;while true do if (((1215 -(533 + (672 -359)))<=2444) and (v286==(759 -(254 + (1028 -(457 + 66)))))) then v269=v233[v266];v270=v269[432 -(214 + 217)];v286=1822 -(1050 + 771);end if (((714 -(60 + 466 + 187))==v286) or (1574<(3069 -2277))) then v268=1 + 0;break;end end end if (((9908 -6561)>845) and (v268==(1 + 0))) then v271=v269[1 + 0 + 1];if (((4701 -(200 + 215))==(3978 + 308)) and (v270==v90) and (v271>=v146)) then local v288=0 + 0;local v289;while true do if (((1953 -(984 + 969))==v288) or (1604<=156)) then v289=0 -0;while true do if (((745 -(55 + 404))<(1923 + 659)) and (v289==(0 + 0))) then v147[v271]=v270[v271];v269[1 + 0]=v147;break;end end break;end end end break;end end break;end if (((2607 -848)>(650 + 34 + (1230 -292))) and (v267==(1460 -(755 + (773 -(14 + 54)))))) then v268=0;v269=nil;v267=2 -1;end if (((15072 -10878)<(6586 -(1343 + 377))) and (v267==(1 + 0))) then v270=nil;v271=nil;v267=2;end end end break;end end break;end end end break;end end break;end end end elseif (((5083 -3615)<(4621 -2512)) and (v93>(985 -(142 + (2151 -1314))))) then v90[v92[(1827 -(255 + 1571)) + 1]]=v32[v92[626 -(82 + 541)]];elseif ((v92[6 -4]==v90[v92[2 + 2]]) or ((806 -569)>=2643)) then v72=v72 + (2 -(1 + 0));else v72=v92[2 + 1];end elseif ((v93<=(11 + 0)) or ((3515 + 30)<=(1219 -(63 + 536)))) then if ((v93<=(208 -(134 + 65))) or ((127 + (480 -(122 + 321)))>=(464 + 2019))) then if (((11812 -7727)>=(479 + 1899)) and (v93==(16 -(184 -(151 + 25))))) then v90[v92[2]]=v92[3 + 0];else local v150=0 + 0;local v151;local v152;while true do if (((357 + 303)<(2251 -(60 + 913))) and (v150==(1350 -(761 + 588)))) then while true do if ((v151==((1381 -(672 + 709)) + 0)) or ((3483 -1258)<=(4996 -3657))) then v152=v92[1845 -((1123 -686) + 1406)];v90[v152](v90[v152 + 1]);break;end end break;end if ((v150==0) or ((10686 -6721)<(3509 -1633))) then v151=0;v152=nil;v150=1663 -(422 + 1240);end end end elseif ((v93==(1858 -(520 + (3009 -(587 + 1094))))) or (3439==214)) then local v153=0 + 0;local v154;local v155;local v156;while true do if ((v153==(2 -1)) or ((2074 -(272 + 443))<=(1266 + 68))) then v156=nil;while true do if (((5547 -(48 + 704))>=(3552 -(647 + 11 + 8))) and (v154==(1718 -(1307 + 411)))) then v155=0 -0;v156=nil;v154=2 -1;end if (((5204 -(182 + 138))>(3827 -(76 + 347 + 895))) and (v154==(446 -(144 + 301)))) then while true do if (((4393 -(639 + 915))>(1559 -(7 + 1035))) and (v155==(0 + 0))) then v156=v92[1382 -(415 + 965)];v90[v156](v12(v90,v156 + (1121 -(648 + 472)),v92[2 + 1]));break;end end break;end end break;end if (((4202 -(549 + 64))<=((24311 -13032) -7125)) and (v153==(0 + 0))) then v154=1564 -(1236 + 328);v155=nil;v153=1;end end else v90[v92[586 -(571 + 13)]][v92[(1140 -(912 + 225)) + (1743 -(1474 + 269))]]=v92[1 + 3];end elseif (((2144 + 2631)>(10478 -6425)) and (v93<=(44 -31))) then if (((7755 -4834)<(5464 -(75 + 1073))) and (v93>12)) then local v158=0;local v159;local v160;local v161;local v162;while true do if ((1471<(7511 -5559)) and (v158==0)) then local v201=0 -0;while true do if ((v201==(0 -0)) or ((5038 -(218 + 444))<=(1947 -(599 + 218)))) then v159=v92[2];v160,v161=v87(v90[v159](v12(v90,v159 + 1 + 0 + 0,v92[7 -4])));v201=1 + 0;end if (((2080 + 1033)<=3646) and (v201==(1 + 0))) then v158=506 -(4 + 501);break;end end end if (((5236 -(277 + 569))>=(3258 -(1519 + 138 + 302))) and (v158==(1106 -(673 + 432)))) then v73=(v161 + v159) -1;v162=702 -(533 + 169);v158=1675 -(1116 + 10 + (1563 -(956 + 60)));end if (((380 + 2432)>=(1357 + 764)) and (v158==(1 + 1))) then for v210=v159,v73 do local v211=0;local v212;while true do if (((2473 -((628 -397) + 16))>((6395 -3538) -1454)) and (((0 + 0) -0)==v211)) then v212=1581 -(616 + 965);while true do if (((1569 -(850 + 719))==v212) or (1426>2935)) then v162=v162 + 1;v90[v210]=v160[v162];break;end end break;end end end break;end end else v72=v92[3];end elseif (((431 + 50)>((2693 -(903 + 689)) -(1507 -(346 + 427)))) and (v93==(31 -17))) then v90[v92[2]]();else local v163=0;local v164;local v165;local v166;local v167;while true do if (((4 + 236 + 1311)<=(627 + 2261)) and (v163==(0 -0))) then local v202=0 -(0 -0);while true do if ((v202==(1 -0)) or (4892==(1773 -1168))) then v163=1 + 0;break;end if ((0==v202) or ((2712 + 546)>4557)) then v164=0 + 0;v165=nil;v202=1;end end end if ((v163==(1 + 0)) or (581==(2874 -(398 + 515)))) then local v203=0;while true do if ((v203==1) or ((4109 -(272 + 339 + 377))<=(392 + 50))) then v163=262 -(128 + 132);break;end if (((1947 -(1632 + 315))==v203) or (445<=(424 -81))) then v166=nil;v167=nil;v203=3 -2;end end end if (((4195 -(95 + 1253))<=(1049 + 3313)) and (v163==(3 -1))) then while true do if (((167 + 1316)<(734 + 1074)) and ((1 -0)==v164)) then local v220=0 + 0 + 0;local v221;while true do if ((4449>1675) and (v220==((73 + 573) -(597 + 49)))) then v221=0 -0;while true do if ((1661<=2255) and (v221==(1358 -(657 + 700)))) then v164=2;break;end if (((514 + (12017 -7939))==4592) and (v221==(0 -(0 + 0)))) then v167={};v166=v9({},{__index=function(v257,v258)local v272=0 + 0;local v273;local v274;while true do if ((((11052 -4856) -2208)>=(990 + 618)) and (v272==(2 -1))) then while true do if (((2067 + 1089)<3376) and (v273==(1330 -(558 + (2089 -(615 + 702)))))) then v274=v167[v258];return v274[1 + (0 -0)][v274[1 + 1]];end end break;end if (((2311 + 1261)<=(3512 + 751)) and (v272==0)) then v273=0 + (1422 -(857 + 565));v274=nil;v272=1571 -(443 + 1127);end end end,__newindex=function(v259,v260,v261)local v275=0;local v276;local v277;while true do if ((v275==(0 + 0 + 0)) or ((213 + 203)>=((3982 -1682) -1604))) then v276=0;v277=nil;v275=1617 -(1429 + 187);end if ((2284==(2728 -(43 + 401))) and (v275==(1 + 0))) then while true do if (((2241 -(219 + 123))<=(13165 -8911)) and (v276==(0 -0))) then v277=v167[v260];v277[1][v277[8 -6]]=v261;break;end end break;end end end});v221=4 -3;end end break;end end end if ((v164==(2 -0)) or (1148>1589)) then for v234=1 -0,v92[8 -4] do local v235=0;local v236;local v237;local v238;while true do if ((((5520 -2992) -1550)<=(3799 + (1423 -1071))) and ((0 + 0)==v235)) then v236=1875 -(583 + 1292);v237=nil;v235=1291 -(608 + 682);end if (((4 -(1 + 2))==v235) or (((1932 + 14415) -(10601 + 800))<(2862 -(1369 + 361)))) then v238=nil;while true do if (((4601 -(24 + 496))==(5041 -(239 + 721))) and (v236==(1 -0))) then while true do if ((v237==(1 + 0)) or ((777 + 973)>((9817 -5994) -(562 + 1163)))) then if (((1104 -(110 + 8))<1618) and (v238[1037 -(413 + 623)]==(29 + 1))) then v167[v234-(3 -2)]={v90,v238[3]};else v167[v234-(1 + 0)]={v32,v238[(1041 + 954) -(98 + 1894)]};end v89[ #v89 + (1163 -(686 + 476))]=v167;break;end if ((2913>(6169 -4214)) and ((0 -0)==v237)) then local v279=0 + 0;local v280;while true do if (((3847 + 466)>(1554 + 1076)) and (v279==(0 + 0))) then v280=(524 -(291 + 233)) + 0;while true do if ((v280==(4 -3)) or ((1023 + 770)>(9394 -7224))) then v237=914 -(779 + 134);break;end if (((0 -0)==v280) or ((165 + 89)>=4884)) then local v290=0;while true do if ((((905 + 392) -(882 -187))<=1291) and (v290==0)) then v72=v72 + 1;v238=v84[v72];v290=1;end if (((4140 -(119 + 1860))>(1044 + 880)) and ((1792 -(943 + 848))==v290)) then v280=1 + 0;break;end end end end break;end end end end break;end if (((2945 -1600)==1345) and (v236==(354 -(273 + 81)))) then local v262=0 + 0;while true do if ((v262==1) or ((2640 -(40 + 6 + 0))>=4552)) then v236=1 + 0;break;end if ((107<(9730 -4950)) and (v262==0)) then v237=1235 -(957 + 278);v238=nil;v262=1 -0;end end end end break;end end end v90[v92[2]]=v29(v165,v166,v33);break;end if (((743 + 30 + 2408)<(3404 + 175)) and (v164==(0 -0))) then local v223=0;while true do if (((3830 -(878 + 1083))>(1060 -827)) and (v223==(1556 -(529 + 1027)))) then local v243=0;while true do if (((4225 -((1242 -(403 + 833)) + 906))>=3091) and (v243==(2 -1))) then v223=(1 + 1) -1;break;end if (((563 + 62)<=((4017 + 639) -2639)) and (v243==(0 + 0))) then v165=v85[v92[521 -((1190 -(673 + 88)) + 89)]];v166=nil;v243=1514 -(1141 + 372);end end end if (((5329 -3642)<=(2070 + 2052)) and (v223==1)) then v164=317 -(237 + 79);break;end end end end break;end end end elseif (((1891 + (3336 -(1729 + 133)))>=2934) and (v93<=(23 + 0))) then if ((v93<=((104 -53) -32)) or (3118==2286)) then if ((v93<=17) or ((190 + 3129)<(1054 -(504 + 363)))) then if ((v93==(29 -13)) or (1292>=(3737 -(1284 + 113)))) then local v168=0;local v169;local v170;local v171;while true do if ((v168==(0 -0)) or (4026<(386 + 3219))) then v169=0 -0;v170=nil;v168=2 -1;end if ((v168==(1 + 0)) or ((5468 -(142 + 1733))<=(4743 -(670 + 975)))) then v171=nil;while true do if (((13017 -8037)>(2508 -((79 -42) + 134))) and (v169==(0 -0))) then local v224=0 + 0;while true do if (((6056 -2445)==(16116 -12505)) and (v224==1)) then v169=1 + 0;break;end if (((12326 -9674)>(1385 -437)) and (v224==(0 + 0 + 0))) then v170=0 + 0;v171=nil;v224=1 + 0;end end end if (((1258 -781)==477) and (v169==(1 + 0))) then while true do if (((1522 -968)<1390) and (v170==(0 -0))) then v171=v92[(542 -(279 + 261)) + 0];v90[v171]=v90[v171]();break;end end break;end end break;end end else local v172=0 -0;local v173;local v174;while true do if ((2869>=(238 + 430)) and (v172==(0 + 0))) then v173=0 + 0;v174=nil;v172=1105 -(6 + 1098);end if ((1==v172) or ((7 + 6)==(2032 -663))) then while true do if (((1969 + (2016 -1366))<(2227 + 2644)) and (v173==0)) then v174=v92[1950 -(1332 + 63 + 553)];v90[v174]=v90[v174](v90[v174 + ((1904 -(207 + 77)) -(369 + 1250))]);break;end end break;end end end elseif (((212 -133)<(780 -345)) and (v93>(27 -9))) then if ((v90[v92[(2 + 2) -2]]==v92[(594 + 1022) -(1365 + 247)]) or ((3536 -(1133 + 526 + 41))<=(2200 -(410 + 479 + 330)))) then v72=v72 + 1 + 0;else v72=v92[3 + (473 -(101 + 372))];end elseif ( not v90[v92[4 -2]] or ((3952 -2330)==(2078 -(49 + 75 + 942)))) then v72=v72 + 1 + 0;else v72=v92[1873 -(1551 + 319)];end elseif (((1915 + 1425)>(6003 -4187)) and (v93<=(47 -26))) then if (((2017 -(860 + 266))==(842 + 49)) and (v93==((2501 -(422 + 114)) -(1328 + 617)))) then if (v90[v92[126 -((267 -178) + 35)]] or (2486>4506)) then v72=v72 + 1;else v72=v92[2 + 1];end else local v175=0 -0;local v176;local v177;local v178;while true do if (((510 + 3152)>(4734 -(1398 + 61))) and ((1 -0)==v175)) then v178=nil;while true do if ((v176==(1 -(0 -0))) or (3429<125)) then v90[v177 + (1313 -(795 + 517))]=v178;v90[v177]=v178[v92[170 -(165 + 1)]];break;end if ((v176==(0 -0)) or ((429 -280)>636)) then v177=v92[1 + 1];v178=v90[v92[13 -10]];v176=1;end end break;end if ((0==v175) or ((912 + 807)<(1193 -(148 + 248 + 237)))) then v176=0 + 0;v177=nil;v175=1;end end end elseif (((6829 -4034)==(7935 -5140)) and (v93==(62 -40))) then local v179=0;local v180;local v181;while true do if (((4982 -(33 + 1341))<=(4053 -(45 + 21))) and (v179==0)) then v180=0;v181=nil;v179=(1958 -(1677 + 147)) -(86 + 47);end if ((v179==(579 -(462 + 116))) or ((5370 -(6798 -3860))>=(2821 + 555))) then while true do if (((8040 -5097)==2943) and (v180==(0 + 0))) then v181=v92[1788 -(885 + 901)];v90[v181]=v90[v181](v12(v90,v181 + 1 + 0,v92[1113 -((103 -(13 + 37)) + 1057)]));break;end end break;end end elseif ((4054<((16537 -(978 + 224)) -10363)) and (v90[v92[5 -3]]<v92[4])) then v72=v72 + (1 -0);else v72=v92[(16 + 342) -(105 + 250)];end elseif (((3482 -(872 + 1046))<3875) and (v93<=(965 -(802 + 136)))) then if ((v93<=((4463 -2887) -(74 + 1477))) or ((5500 -(568 + 108))<=(2682 -(1636 + 158 + 12)))) then if ((v93==(9 + 15)) or (((3686 -(629 + 412)) + 1816)>(23920 -18967))) then v90[v92[(11 -8) -1]]=v29(v85[v92[2 + (1 -0)]],nil,v33);else local v183=0 + 0;local v184;local v185;local v186;local v187;local v188;while true do if ((v183==(0 + 0)) or ((3236 -(220 + 82 + 72))==(3571 -(102 + (704 -297))))) then v184=0;v185=nil;v183=2 -1;end if ((v183==(3 -1)) or (1515>1579)) then v188=nil;while true do if ((((298 + 8486) -3945)>((369 + 5085) -(300 + 1057))) and (v184==(0 -0))) then v185=139 -(108 + 31);v186=nil;v184=(4 -3) + 0;end if (((722 + 4140)==(1273 + 3589)) and (v184==(495 -(10 + 484)))) then local v229=0;while true do if ((v229==(1 -0)) or (2901<2890)) then v184=2;break;end if (((381 + 1647)<(565 + 1784)) and (v229==(0 -0))) then v187=nil;v188=nil;v229=1 -0;end end end if (((788 + 160)<=(5489 -(198 + 512))) and ((38 -(11 + 25))==v184)) then while true do if ((2554>(1926 -(520 + 231))) and (v185==(0 -0))) then local v245=0;while true do if (((2929 -(1695 + 28))<(6028 -1758)) and (v245==(0 + 0))) then v186=v92[9 -7];v187={v90[v186](v12(v90,v186 + (1146 -(52 + 1093)) + 0,v73))};v245=(839 -(582 + 256)) -0;end if ((v245==(1 -0)) or ((3297 -(114 + 84))<(4358 -(1275 + 349)))) then v185=2 -(1 + 0);break;end end end if (((1 -0)==v185) or ((4272 -((1873 -(1362 + 302)) + 200))==(340 -(181 + 149)))) then v188=205 -(73 + 132);for v249=v186,v92[4] do local v250=0 -(1333 -(640 + 693));local v251;while true do if ((v250==(815 -(686 + 129))) or ((10413 -7190)<((1140 -(40 + 738)) + 55))) then v251=0 -0;while true do if ((v251==(366 -(210 + 112 + 44))) or (3035<=((2718 -1118) -(1012 + 273)))) then v188=v188 + ((1474 -(1413 + 59)) -1);v90[v249]=v187[v188];break;end end break;end end end break;end end break;end end break;end if ((v183==((2 + 0) -1)) or ((851 + 2101)<=(137 + 2690))) then v186=nil;v187=nil;v183=2;end end end elseif (((984 -378)<(2380 -(109 + 1060))) and (v93==26)) then v90[v92[2]]=v90[v92[9 -6]][v92[716 -(67 + 645)]];else do return;end end elseif ((v93<=29) or ((1454 + 3238)<(2595 + 314))) then if ((v93==(1480 -(411 + 1041))) or ((3551 -(325 + 1283))>=4034)) then local v190=0 + 0;local v191;local v192;while true do if ((v190==(1194 -(1043 + 151))) or ((8000 -3058)<(4168 -(237 + 1350)))) then v191=0 -0;v192=nil;v190=1;end if (((6605 -2147)>=(8395 -6520)) and (v190==1)) then while true do if (((0 + 0)==v191) or ((4925 -(106 + 56))==(4479 -(582 + 1330)))) then v192=v92[932 -(306 + 624)];do return v12(v90,v192,v73);end break;end end break;end end else for v195=v92[(195 + 293) -(135 + 351)],v92[1 + 2] do v90[v195]=nil;end end elseif ((v93>30) or (276>=(5120 -(293 + 613)))) then v90[v92[1 + 1]]=v33[v92[3]];else v90[v92[2]]=v90[v92[6 -3]];end v72=v72 + (3 -2);break;end if (((18695 -14855)<=(5047 -(62 + 1055))) and (v98==0)) then local v107=0 + 0;while true do if (((2123 + (1265 -(161 + 989)))>(29 + 2)) and (v107==(1 + 0))) then v98=1 + 0;break;end if (((3489 -1100)<=((2663 -(141 + 753)) + 1942)) and (v107==(0 -0))) then local v115=1389 -(82 + 1307);while true do if (((2553 -(1155 + 758))>=(22 + 8)) and (v115==(2 -1))) then v107=3 -(446 -(30 + 414));break;end if ((v115==(0 + 0)) or ((1749 -751)==(3490 -(210 + 218)))) then v92=v84[v72];v93=v92[2 -1];v115=1 + 0;end end end end end end break;end end end end A,B=v27(v10(v76));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v31[4][v72] or "?";error("Script error at ["   .. v95   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end if (v52==0) then v53=v31[1];v54=v31[2];v52=1;end end end;return v29(v28(),{},v16)(...);end if (v17==1) then v20=function(v34,v35,v36)if v36 then local v64=(v34/((4 -2)^(v35-(1 + 0))))%((534 -(318 + 214))^(((v36-1) -(v35-1)) + (825 -(765 + 59))));return v64-(v64%((2 -1) + 0));else local v65=0 + 0;local v66;while true do if (v65==(0 -0)) then v66=(1919 -(416 + 11 + 1490))^(v35-(39 -(30 + 8)));return (((v34%(v66 + v66))>=v66) and (2 -1)) or (0 + 0);end end end end;v21=nil;v21=function()local v56=v1(v15,v18,v18);v18=v18 + 1;return v56;end;v22=nil;v17=2;end if (v17==2) then v22=function()local v57,v58=v1(v15,v18,v18 + 1 + 1);v18=v18 + (1530 -(835 + 693));return (v58 * (141 + 115)) + v57;end;v23=nil;v23=function()local v59=(1569 -(399 + 104)) -(223 + 843);local v60;local v61;local v62;local v63;while true do if (v59==(0 + 0)) then v60,v61,v62,v63=v1(v15,v18,v18 + (6 -3));v18=v18 + 4;v59=1;end if (v59==(1 + 0)) then return (v63 * (80343670 -63566454)) + (v62 * (66947 -(1104 + 307))) + (v61 * (246 + 10)) + v60;end end end;v24=nil;v17=3;end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v67=v2(v0(v37,16));if v19 then local v71=v5(v67,v19);v19=nil;return v71;else return v67;end end end);v20=nil;v17=1;end end end vv8(),...);end
