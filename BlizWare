-- This file was generated using Luraph Obfuscator v13.5.9

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==2) then function v22()local v38,v39=v1(v15,v18,v18 + 2 + 0);v18=v18 + (2 -0);return (v39 * 256) + v38;end v23=nil;function v23()local v40,v41,v42,v43=v1(v15,v18,v18 + (596 -(36 + 557)));v18=v18 + (9 -5);return (v43 * (77974128 -61196912)) + (v42 * 65536) + (v41 * 256) + v40;end v24=nil;v17=3;end if (v17==3) then function v24()local v44=v23();local v45=v23();return (( -(519 -(288 + 229)) * v20(v45,67 -(12 + 23))) + (2 -1)) * (((3 -1) + 0)^(v20(v45,7 + 14,1680 -(883 + 766)) -1023)) * ((((v20(v45,1 + 0,675 -(359 + 296)) * (((6 -4) + 0)^(387 -(50 + 305)))) + v44)/((1485 -(207 + 1276))^(249 -197))) + (4 -3));end v25=nil;function v25(v30)local v46=0 + 0 + 0;local v47;local v48;while true do if ((488 -(128 + 360))==v46) then v47=nil;if  not v30 then local v76=0 -0;while true do if (v76==(0 -0)) then v30=v23();if (v30==(331 -(155 + 176))) then return "";end break;end end end v46=2 -(1 + 0);end if (v46==2) then v48={};for v74=181 -(137 + 43), #v47 do v48[v74]=v2(v1(v3(v47,v74,v74)));end v46=1714 -(612 + 1099);end if (v46==((1351 -(1010 + 331)) -(5 + 2))) then return v6(v48);end if ((1 + (0 -0))==v46) then v47=v3(v15,v18,(v18 + v30) -(4 -3));v18=v18 + v30;v46=6 -4;end end end v26=v23;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then local v62=0;while true do if (v62==0) then v19=v0(v3(v31,1,1));return "";end end else local v63=0;local v64;while true do if (v63==0) then v64=v2(v0(v31,16));if v19 then local v79=0;local v80;while true do if (v79==1) then return v80;end if (v79==0) then v80=v5(v64,v19);v19=nil;v79=1;end end else return v64;end break;end end end end);v20=nil;v17=1;end if (v17==5) then v29=nil;function v29(v32,v33,v34)local v49=v32[1];local v50=v32[2];local v51=v32[3];return function(...)local v65=0;local v66;local v67;local v68;local v69;local v70;while true do if (v65==1) then v68={...};v69=v11("#",...) -1;v65=2;end if (v65==2) then v70=nil;function v70()local v81=v49;local v82=v50;local v83=v51;local v84=v27;local v85={};local v86={};local v87={};for v93=0 -(1355 -(249 + 1106)),v69 do if ((v93>=v83) or ((6055 -1762)<=(5319 -(989 + 766 + 66)))) then v85[v93-v83]=v68[v93 + (2 -1)];else v87[v93]=v68[v93 + 1 + 0];end end local v88=(v69-v83) + 1;local v89;local v90;while true do local v94=0;local v95;local v96;while true do if (((593 -(536 + 57))==v94) or ((1603 + 1821)>=3996)) then v95=0;v96=nil;v94=380 -(227 + 152);end if ((((2954 -(56 + 23)) -2128)>=(1139 -715)) and (v94==(1 + 0))) then while true do if ((v95==(1663 -(479 + 1184))) or ((5972 -1394)<(5557 -(151 + 644 + 220)))) then v96=1880 -(1634 + 246);while true do if (((10836 -(8899 -(414 + 576)))<(3799 -(16 + 181))) and (v96==1)) then if ((395<=(3871 -(345 + 8))) and (v90<=(816 -(433 + 369)))) then if ((v90<=(799 -(374 + 419))) or ((9825 -5749)<3170)) then if ((281<(1265 -(123 + 22 + 129))) and (v90<=(7 -5))) then if (((2205 + 837)>=(81 -(1003 -(631 + 312)))) and (v90<=(0 + 0))) then local v123=0 -0;local v124;local v125;local v126;while true do if (((334 + 105)<(23 + 1095)) and ((2 -1)==v123)) then v126=nil;while true do if (((6694 -3930)>(8228 -5645)) and (v124==(1 + 0))) then v87[v125 + (503 -(312 + 190)) + 0]=v126;v87[v125]=v126[v89[1816 -((2152 -(1219 + 582)) + 1461)]];break;end if (((5532 -((3084 -2028) + 252))>=(18 + 8 + 102)) and ((0 -0)==v124)) then local v206=0 + 0;while true do if ((v206==(1492 -(430 + 1061))) or (1436<1083)) then v124=652 -(544 + 107);break;end if (((7303 -4630)==(5372 -2699)) and (v206==0)) then v125=v89[(20 -15) -3];v126=v87[v89[3 + 0]];v206=1983 -(293 + 1689);end end end end break;end if (((1930 -(17 + 178))>=(168 + 124)) and (v123==(0 + 0))) then v124=1855 -(1388 + 467);v125=nil;v123=1 + 0;end end elseif ((v90>(1 + 0)) or ((4264 -(1083 + 139))==(486 + 1068))) then local v128=0;local v129;local v130;local v131;local v132;local v133;local v134;while true do if (((3300 -1473)==(562 + 1265)) and ((1094 -(299 + 795))==v128)) then v129=965 -(90 + 875);v130=nil;v128=1499 -((1270 -784) + (1854 -(169 + 673)));end if ((((1290 -993) + 669)==(520 + 446)) and (v128==1)) then v131=nil;v132=nil;v128=6 -4;end if (((25 + 492)<(1763 -(13 + 17))) and (v128==(2 + 0))) then v133=nil;v134=nil;v128=2 + 1;end if ((v128==((258 + 409) -(250 + 414))) or ((31 + 243 + 2601)==(4247 -2277))) then while true do if ((v129==(3 -(7 -5))) or ((136 -74)>2399)) then local v210=1949 -(256 + 1693);while true do if ((v210==(4 -3)) or ((1006 + 232)>4246)) then v129=1759 -(1490 + 267);break;end if ((((2865 + 1430) -(186 + 316))>=(3872 -1894)) and ((0 -0)==v210)) then v132=nil;v133=nil;v210=1519 -(143 + 1375);end end end if ((v129==(0 -0)) or (((7084 + 2113) -5655)<((3880 + 3368) -4077))) then local v211=0;while true do if ((270==(699 -429)) and (v211==(0 -0))) then v130=0 -0;v131=nil;v211=(1763 -(212 + 858)) -((250 -160) + 602);end if (((18682 -14172)==(7652 -3142)) and (v211==(1 -0))) then v129=1099 -(977 + 121);break;end end end if (((2 + 0)==v129) or ((3941 -(822 + (1763 -(312 + 831))))>(9235 -4677))) then v134=nil;while true do if ((1555<(4161 -2223)) and (2==v130)) then for v260=v131,v67 do local v261=0 -0;local v262;while true do if (((117 -73)<=(4035 -(466 + 1405))) and (0==v261)) then v262=0;while true do if ((v262==(1790 -(1712 + 78))) or ((2783 -1373)>1746)) then v134=v134 + 1 + 0 + 0;v87[v260]=v132[v134];break;end end break;end end end break;end if ((v130==0) or ((1105 + 1000)<=1890)) then local v240=0 + 0;local v241;while true do if ((v240==((456 -(25 + 54)) -(78 + 299))) or ((9350 -6929)>(1113 + 2099))) then v241=828 -(14 + 814);while true do if ((2340>(123 + 792)) and (v241==(1810 -((447 -(81 + 30)) + 1474)))) then local v276=(241 + 204) -((680 -256) + 21);while true do if ((v276==(172 -(108 + 63))) or (((74298 -57111) -12721)>(4763 -(235 + 15)))) then v241=(7 + 475) -(257 + 224);break;end if ((v276==(68 -(48 + 20))) or ((2534 -((318 -129) + 364))<(814 + 331))) then v131=v89[2 -0];v132,v133=v84(v87[v131](v87[v131 + 1 + 0]));v276=1;end end end if (((1943 -1434)==(410 + 99)) and (v241==(1 + 0))) then v130=1 + 0;break;end end break;end end end if (((5172 -(464 + 75))>((451 + 4876) -2322)) and (v130==(1 + 0))) then local v242=0 + 0;local v243;while true do if ((v242==(0 + 0)) or (2856>=4479)) then v243=0 + 0;while true do if (((5026 -(761 + 199 + 256 + 527))==3283) and (v243==(1150 -(1027 + 123)))) then local v277=0 + 0;while true do if ((v277==(0 + 0)) or ((6094 -(666 + 396 + 665))<=(10366 -7700))) then v67=(v133 + v131) -1;v134=1057 -(66 + 991);v277=1211 -(236 + 974);end if (((4922 -(1498 + 263))<(622 + 2816)) and (v277==(1 + 0))) then v243=2 -1;break;end end end if (((389 + 2763)>306) and (v243==(1163 -(746 + 416)))) then v130=3 -1;break;end end break;end end end end break;end end break;end end else local v135=1497 -(443 + 1054);local v136;local v137;while true do if ((v135==(1 -0)) or (2861<(572 + 643))) then while true do if ((v136==0) or ((2268 -(29 + (1351 -(532 + 802))))<(2628 -(606 + 292)))) then v137=v89[2];v87[v137]=v87[v137](v12(v87,v137 + (1791 -(1732 + 58)),v89[3 -0]));break;end end break;end if (((0 -(502 -(63 + 439)))==v135) or ((336 + 3753)<=(2129 + 477))) then v136=0 -0;v137=nil;v135=76 -(24 + 51);end end end elseif ((3475<=((2260 + 3402) -(1307 + 241))) and (v90<=(2 + 2))) then if ((v90>(627 -(454 + 170))) or ((1766 + 1083)>=(5299 -1326))) then v87[v89[2]]();else v87[v89[727 -(261 + 464)]]=v34[v89[8 -5]];end elseif ((v90>(4 + 1)) or (3325==(6905 -(5469 -(133 + 165))))) then if (((4627 -(463 + 308))>(2746 -(298 + 229))) and  not v87[v89[3 -1]]) then v66=v66 + (2 -1) + 0;else v66=v89[939 -(531 + 405)];end else local v139=(631 -(249 + 382)) -(0 -0);local v140;local v141;while true do if ((v139==1) or ((2530 -(716 + 786))<(173 + 31))) then while true do if ((v140==(1533 -(827 + 706))) or ((3170 -(1680 + 220))==(646 + 2111))) then v141=v89[1749 -(241 + 1506)];do return v87[v141](v12(v87,v141 + (1151 -(52 + 1098)),v89[3]));end break;end end break;end if ((v139==(0 -0)) or ((1057 + 398)>=2148)) then local v199=0 -0;while true do if ((v199==(526 -((1625 -(1097 + 348)) + 346))) or ((5272 -3394)>(4153 -(468 + 868)))) then v140=0 -0;v141=nil;v199=(1 + 1) -1;end if ((v199==(2 -1)) or ((1406 -(375 + 439 + 492))==(341 -171))) then v139=1461 -(450 + 1010);break;end end end end end elseif (((3757 -(698 + (2248 -(690 + 1140))))==(1230 + 1411)) and (v90<=(1138 -(578 + 550)))) then if ((v90<=(18 -10)) or (3726<=3057)) then if ((v90>((4 + 10) -7)) or (2528>=(8099 -4882))) then if ((v87[v89[2]]<v89[105 -(38 + 63)]) or (488>1839)) then v66=v66 + 1;else v66=v89[(1998 -(997 + 998)) -0];end else local v142=0 + (1283 -(297 + 986));local v143;local v144;while true do if ((v142==(0 + 0)) or ((3184 -(55 + 78 + 100))>(6123 -(886 + 898)))) then v143=0;v144=nil;v142=1 -0;end if (((6374 -4230)==(5296 -3152)) and (v142==((8649 -6788) -(1803 + 57)))) then while true do if (((4464 -(273 + 701))>(216 + 2278)) and (v143==(617 -((443 -(30 + 56)) + 260)))) then v144=v89[2];v87[v144]=v87[v144](v87[v144 + (1472 -(645 + 826))]);break;end end break;end end end elseif ((v90==9) or ((4382 -3451)>=(4688 -2516))) then local v145=0;local v146;local v147;while true do if ((4069>(3561 -2271)) and (v145==(1947 -(693 + 1253)))) then while true do if (((0 -0)==v146) or (2556==(6618 -(782 + 1087)))) then v147=v89[2 + 0];v87[v147]=v87[v147]();break;end end break;end if ((v145==0) or (125>4984)) then v146=941 -(345 + 566 + 30);v147=nil;v145=1112 -(545 + 566);end end else v87[v89[1574 -(646 + 926)]]=v87[v89[3 + 0]][v89[4 + 0]];end elseif ((219<=(4277 + 314)) and (v90<=(1479 -(798 + 669)))) then if ((v90>(1 + 10)) or (660<=(1008 -(295 + 656)))) then local v149=891 -(732 + 159);local v150;while true do if ((v149==(0 -0)) or ((11 + 3213)==(4360 -1882))) then v150=v89[436 -(248 + (317 -131))];v87[v150](v87[v150 + 1 + 0]);break;end end else for v197=v89[4 -2],v89[2 + 1] do v87[v197]=nil;end end elseif (((5007 -(1181 + 500))==(4898 -((1182 -655) + 1045))) and (v90>(1999 -((2326 -(143 + 1491)) + 1294)))) then local v151=0;local v152;local v153;local v154;local v155;local v156;while true do if ((v151==((6942 -5156) -(1187 + 599))) or ((8736 -3851)<(3350 -(764 + 671)))) then v152=1309 -(862 + 447);v153=nil;v151=1;end if ((814<=(4829 -(714 + 7))) and (v151==(1803 -(610 + 1191)))) then v156=nil;while true do if ((4036<=(5179 -(241 + 693))) and (v152==(0 -0))) then local v215=0 -0;while true do if ((v215==(694 -(499 + 194))) or ((1749 + 788)<2293)) then v152=3 -2;break;end if (((1907 + 833)<=(3120 -(11 + 37))) and (v215==0)) then v153=0 + 0;v154=nil;v215=4 -3;end end end if ((v152==(1019 -(907 + 111))) or ((2002 -(607 + 356))==(535 + (398 -302)))) then v155=nil;v156=nil;v152=2;end if ((v152==(2 + 0 + (0 -0))) or ((3569 -(1637 + 61))==(1218 + 829))) then while true do if ((v153==(1 + 0)) or ((2511 -(495 + 38))>=((16634 -12325) -(1024 + 190)))) then v156=0 + 0;for v263=v154,v89[1034 -(259 + 771)] do local v264=0 + 0;local v265;local v266;while true do if (((2050 -(745 + 303))>=(482 + 23)) and (v264==(0 + 0))) then v265=0;v266=nil;v264=(1838 -(722 + 1115)) -0;end if ((v264==(680 -(158 + 521))) or ((56 + 221)>(2478 -(859 + 779)))) then while true do if ((3691>(903 + 1757)) and (v265==(0 -0))) then v266=0 -0;while true do if (((3423 + 319)>532) and ((1613 -(792 + 821))==v266)) then v156=v156 + 1;v87[v263]=v155[v156];break;end end break;end end break;end end end break;end if (((2187 + 1127)==3314) and (v153==(0 + 0))) then local v244=0 -0;local v245;while true do if ((v244==(0 + 0)) or ((806 + 751)>=(5182 -3026))) then v245=0;while true do if (((2 -1)==v245) or ((11628 -7158)==(15140 -10906))) then v153=1751 -(638 + 1112);break;end if (((1992 -(1157 + 90))<(9598 -6390)) and (v245==0)) then local v278=285 -(22 + (1335 -(770 + 302)));while true do if (((2499 -(374 + 1453))<=1825) and (v278==0)) then v154=v89[1 + 1];v155={v87[v154](v12(v87,v154 + (3 -2),v67))};v278=4 -3;end if (((563 -(534 + (1016 -(958 + 30))))==v278) or ((8063 -4234)==(623 -(1681 -(280 + 1191))))) then v245=2 -1;break;end end end end break;end end end end break;end end break;end if (((1530 -(74 + 276))<=((6018 -3555) -(5 + 9 + 9))) and (v151==(1091 -(266 + 124 + 700)))) then v154=nil;v155=nil;v151=1 + 1;end end else v87[v89[2 + 0]]=v29(v82[v89[(5 -1) -1]],nil,v34);end elseif (((6741 -2788)==(5855 -(447 + 503 + 952))) and (v90<=(11 + 11))) then if (((1952 -(139 + (89 -(18 + 3))))>(2219 -1526)) and (v90<=(1007 -(973 + 16)))) then if ((v90<=16) or ((2429 + 2132)>4951)) then if ((v90==(8 + 7)) or ((1399 + 2255)<=(267 + (40 -18)))) then local v158=387 -(241 + 146);local v159;local v160;local v161;while true do if ((v158==((0 + 0) -0)) or ((11005 -7269)<(2401 + 760))) then v159=0 + 0;v160=nil;v158=1;end if (((9389 -4706)>=(9963 -(6312 + 903))) and ((48 -(31 + 16))==v158)) then v161=nil;while true do if ((v159==0) or (((3825 -(133 + 296)) -(627 + 559))==((12417 -7473) -(8 + 263)))) then local v216=0 -0;while true do if (((2341 + 1733)>2529) and (v216==(3 -2))) then v159=1;break;end if ((2026<=(4156 -2083)) and (v216==(0 -0))) then v160=0 -0;v161=nil;v216=1 + 0;end end end if (((6435 -2968)>218) and (v159==(1156 -(600 + 555)))) then while true do if (((6408 -(373 + 1355))>=(1806 -(1239 + 302))) and (v160==((0 -0) -0))) then v161=v89[685 -(104 + 579)];v87[v161](v12(v87,v161 + 1 + 0,v89[4 -(1 + 0)]));break;end end break;end end break;end end else local v162=0 -(332 -(145 + 187));local v163;local v164;local v165;local v166;local v167;local v168;while true do if (((2462 -877)<=(4218 -(600 + 930))) and (v162==(2 + 1))) then while true do if (((2 + 1)==v163) or ((2109 + 2757)<446)) then if (v168 or ((9347 -6148)>(4818 -(69 + 74)))) then local v233=1192 -(194 + 998);while true do if ((v233==(0 + 0)) or (2883<=1241)) then v87[v166]=v168;v66=v89[3];break;end end else v66=v66 + 1 + (0 -0);end break;end if (((6948 -3316)==(8948 -5316)) and (v163==0)) then local v217=0;while true do if (((3663 + 333)>(252 + 2407)) and (v217==(1 + 0))) then v163=772 -(11 + 760);break;end if (((2679 -(152 + 28))>(1012 + 279)) and (v217==(0 + 0))) then v164=v89[1 + 1];v165=v89[1663 -(1646 + (471 -(227 + 231)))];v217=1 + 0;end end end if ((((8599 -6107) -(13 + 846))<=(6655 -(43 + 1834))) and (v163==(666 -(199 + 466)))) then local v218=(3021 -1566) -(992 + 463);while true do if (((5638 -3234)>=(2335 -(858 -(212 + 60)))) and (v218==(1477 -(382 + 1094)))) then v163=7 -(576 -(117 + 454));break;end if (((6113 -2329)>(36 + 2257)) and (v218==(0 + 0))) then v166=v164 + (1256 -(854 + 400));v167={v87[v164](v87[v164 + (2 -1)],v87[v166])};v218=1 + 0;end end end if ((v163==(2 + 0)) or ((1 + 16)==(2205 -(460 + 937)))) then for v224=1 + 0,v165 do v87[v166 + v224]=v167[v224];end v168=v167[(1 + 0) -0];v163=(9 -7) + 1;end end break;end if ((v162==(1855 -(28 + 1827))) or ((1501 + 1440)==((6637 -(528 + 616)) -3092))) then v163=0 + 0;v164=nil;v162=1;end if ((1559<((4413 -(328 + 1414)) -(5 + 183))) and (v162==(444 -(378 + 64)))) then v167=nil;v168=nil;v162=1709 -(655 + 1051);end if ((v162==(1 -0)) or ((4645 -2616)<((3382 -1658) -(972 + 229)))) then v165=nil;v166=nil;v162=2 -0;end end end elseif ((v90==(38 -21)) or ((4499 -(1161 + 108 + 383))==(5356 -1830))) then v87[v89[2]][v89[(1128 -(976 + 149)) + 0]]=v89[4 + 0];else local v170=1527 -(1004 + 523);local v171;local v172;local v173;while true do if (((2167 -((3062 -1647) + 167))==((520 + 1741) -(190 + 1486))) and (v170==(0 -0))) then v171=0 + 0;v172=nil;v170=2 -1;end if ((v170==1) or ((1822 + 2650)<((2683 -(66 + 1085)) + 2460))) then v173=nil;while true do if ((v171==((0 + 0) -0)) or ((419 + 764)==((191 -130) -(55 -18)))) then local v219=0 -0;while true do if (((10019 -5624)>=(1707 -780)) and (v219==1)) then v171=1 + 0;break;end if ((v219==(1882 -(344 + 1538))) or ((1251 -682)>4872)) then v172=997 -(766 + 231);v173=nil;v219=1;end end end if (((432 + 1084)<(9544 -6365)) and (v171==((2 + 0) -1))) then while true do if ((v172==(0 -0)) or ((4337 -((1652 -(688 + 233)) + 480))>(9475 -4673))) then v173=v89[3 -1];do return v12(v87,v173,v67);end break;end end break;end end break;end end end elseif (((286 + 2395)<3736) and (v90<=(12 + 8))) then if ((1784>=(5986 -4404)) and (v90==19)) then v87[v89[(281 -(42 + 33)) -(13 + 191)]]=v33[v89[1 + 2]];else local v175=(1173 + 757) -(191 + 1739);local v176;while true do if ((v175==0) or ((5388 -3119)<(244 + 125))) then v176=v89[5 -(3 + 0)];v87[v176]=v87[v176](v12(v87,v176 + 1,v67));break;end end end elseif ((396<((1375 + 9370) -6200)) and (v90>21)) then do return;end else v87[v89[1 + 1]]=v87[v89[2 + 1]];end elseif ((v90<=(4 + 22)) or ((5622 -2830)==3445)) then if ((v90<=(20 + 4)) or ((4533 -(611 + 695))<=(98 + 172))) then if ((((9047 -3921) -(215 + 98))>=((32548 -21434) -7361)) and (v90>23)) then local v178=(0 -0) + 0;local v179;local v180;local v181;local v182;local v183;local v184;while true do if (((10842 -6909)==(13939 -10006)) and (v178==(0 -0))) then v179=0;v180=nil;v178=1 + 0;end if (((1313 + 1153)<(3037 -(34 + 283))) and (v178==2)) then v183=nil;v184=nil;v178=486 -(4 + 479);end if ((2988>=(145 + 1351 + 1325)) and (v178==3)) then while true do if ((v179==1) or ((1265 -(195 + 332))==(3170 -(984 + (714 -271))))) then local v220=0 + 0;while true do if ((v220==(0 -0)) or ((3860 -2346)==(1525 -(20 + 346)))) then v182=nil;v183=nil;v220=1;end if ((v220==(559 -(89 + 239 + 230))) or ((4740 -(2293 -(136 + 27)))<((7608 -5321) + 126))) then v179=8 -6;break;end end end if ((v179==(8 -6)) or (((11281 -2624) -3676)<=(3061 + 659))) then v184=nil;while true do if ((v180==((0 -0) + 0)) or ((1842 -(1289 + 323))>(2155 + 1117))) then local v246=0;local v247;while true do if ((v246==(1923 -(1535 + 388))) or (((22010 -13274) -4470)<=3630)) then v247=1418 -(1388 + 30);while true do if (((2778 -(253 + (170 -92)))>(2109 -(472 + 886))) and ((4 -3)==v247)) then v180=1119 -(982 + 136);break;end if (((6430 -3658)<(5328 -(472 + 1161))) and ((0 + 0)==v247)) then local v279=0 + 0 + 0;while true do if (((1635 -(31 + 482))<=(2820 -(278 + 484))) and (v279==(1517 -(767 + 749)))) then v247=1;break;end if (((6163 -2053)>=(6966 -5281)) and (v279==(471 -(190 + 281)))) then v181=v89[1 + 1];v182,v183=v84(v87[v181](v12(v87,v181 + 1,v89[10 -7])));v279=1;end end end end break;end end end if (((141 -68)==73) and (v180==(3 -1))) then for v267=v181,v67 do local v268=0 + 0;local v269;local v270;while true do if (((282 + 54)>=(239 -159)) and (v268==1)) then while true do if ((v269==(0 -(0 -0))) or ((251 + 2462)<=(903 -(159 + 102)))) then v270=1822 -(344 + 1478);while true do if (((4088 -1496)>(282 + 629)) and (((1584 -590) -(617 + 377))==v270)) then v184=v184 + (4 -3);v87[v267]=v182[v184];break;end end break;end end break;end if (((1749 -901)>=((328 -224) + (1286 -911))) and ((0 -0)==v268)) then v269=0 -(1687 -(1657 + 30));v270=nil;v268=227 -(75 + 151);end end end break;end if ((v180==(2 -1)) or ((4939 -(431 + 83))<=(283 + 124))) then local v248=1409 -(106 + (1822 -(111 + 408)));while true do if ((v248==(0 -0)) or ((4970 -(334 + 97))<=(2298 -(50 + 171)))) then v67=(v183 + v181) -(1 + 0 + 0);v184=0 -0;v248=1 -0;end if ((v248==(14 -(1 + 8 + 4))) or ((1573 + 2703 + 73)<(2935 -(24 + 3)))) then v180=2;break;end end end end break;end if (((1817 + 2227)>=(993 + (1612 -1244))) and (v179==(66 -((227 -(73 + 114)) + 26)))) then local v221=0 + 0;while true do if ((v221==(2 -1)) or ((9928 -5219)<(3855 + 181))) then v179=1;break;end if ((0==v221) or ((14174 -9316)<=1472)) then v180=0 + 0 + 0;v181=nil;v221=1;end end end end break;end if ((3002==(8350 -5348)) and (v178==(1 + 0))) then v181=nil;v182=nil;v178=3 -1;end end else local v185=0;local v186;local v187;local v188;while true do if ((v185==(3 -(1220 -(1161 + 58)))) or ((1425 + 1616)<=(1667 -(1069 + 454)))) then for v207=1,v89[4] do local v208=(0 + 0) -0;local v209;while true do if ((((1543 + 1862) -1519)<(3737 -1047)) and (v208==(3 -2))) then if ((v209[2 -1]==(1 + 0 + 20)) or ((6996 -4437)>=(7796 -3111))) then v188[v207-1]={v87,v209[3]};else v188[v207-(1164 -(586 + 577))]={v33,v209[1507 -((1871 -843) + 476)]};end v86[ #v86 + 1]=v188;break;end if (((178 + 2374)<=(5390 -1671)) and (v208==(0 -0))) then local v227=0 + 0;while true do if ((v227==(0 + 0)) or ((945 + 2316)<=267)) then v66=v66 + 1 + 0;v209=v81[v66];v227=1;end if ((((4500 -(810 + 255)) -(10 + 12 + 238))<(12263 -7803)) and (v227==(1711 -(614 + 1096)))) then v208=1 -0;break;end end end end end v87[v89[871 -(135 + 321 + 413)]]=v29(v186,v187,v34);break;end if (((6280 -(1758 + 145))<(5178 -(195 + 422))) and (v185==(973 -(121 + (962 -(94 + 17)))))) then local v202=0;while true do if (((5468 -(878 + 2))>=(234 + (3557 -1831))) and (v202==(1 + 0))) then v185=357 -(273 + 82);break;end if ((v202==(0 -0)) or ((390 + 771)>=((1372 + 1238) -1360))) then v188={};v187=v9({},{__index=function(v228,v229)local v234=0 + 0;local v235;local v236;while true do if ((v234==(0 + 0)) or ((1789 -552)<((2592 -(1687 + 199)) + 492))) then v235=0 + 0;v236=nil;v234=1 -0;end if ((v234==(1 -0)) or (((2364 + 1089) -2151)<=643)) then while true do if ((v235==(0 -0)) or ((1232 + 399)>=(1891 + (4020 -2046)))) then local v274=0 -0;while true do if (((0 + 0)==v274) or ((6261 -2483)<((2448 -(1364 + 420)) -195))) then v236=v188[v229];return v236[4 -3][v236[5 -3]];end end end end break;end end end,__newindex=function(v230,v231,v232)local v237=0;local v238;local v239;while true do if ((v237==(554 -(337 + 217))) or ((520 + 225)>2546)) then local v272=208 -(27 + 181);while true do if ((((163 -61) + 1593)<=(2324 -(478 + (217 -130)))) and (v272==(319 -(275 + (51 -8))))) then v237=2 -1;break;end if ((v272==0) or (4738<=((7487 -5304) + 887 + 291))) then v238=0;v239=nil;v272=1 + 0;end end end if ((v237==(339 -(123 + 215))) or ((632 + 2232)==(2240 -(205 + 283)))) then while true do if ((2656==(4982 -2326)) and (v238==(661 -(184 + 477)))) then v239=v188[v231];v239[1][v239[4 -(3 -1)]]=v232;break;end end break;end end end});v202=1;end end end if ((v185==(1114 -(454 + 660))) or ((31 + (44 -16))>1131)) then local v203=0 -(0 -0);while true do if (((2806 -((1571 -(449 + 290)) + 866))<=((1674 -(554 + 631)) + 3631)) and (v203==0)) then v186=v82[v89[3]];v187=nil;v203=1;end if (((1557 + 178)>(2000 -1379)) and (v203==(3 -2))) then v185=3 -2;break;end end end end end elseif ((v90==(33 -8)) or ((3193 -1945)>(5928 -3800))) then if (((4210 -(734 + 1076))<(2880 + 1291)) and (v87[v89[2]]==v89[6 -2])) then v66=v66 + (554 -(233 + 320));else v66=v89[6 -3];end else v87[v89[2]]=v89[3];end elseif ((v90<=28) or ((5777 -(983 + 648))<=(392 + 957))) then if ((v90>27) or (4578==(5438 -((2601 -(175 + 805)) + 116)))) then v66=v89[11 -8];else v87[v89[9 -7]][v89[1657 -(1092 + 562)]]=v87[v89[1 + 3]];end elseif ((v90==(25 + 4)) or (40>(3970 -2655))) then if (v87[v89[1227 -(968 + 257)]] or ((5018 -(119 + 1877))>=(10471 -7093))) then v66=v66 + (432 -(382 + 49)) + 0;else v66=v89[1806 -(207 + 1596)];end elseif ((v89[1805 -(801 + 1002)]==v87[v89[7 -3]]) or (386>((2170 + 1932) -(1673 + 77)))) then v66=v66 + 1;else v66=v89[1534 -(1523 + 8)];end v66=v66 + (1 -0);break;end if (((178 + 818)<=((5120 -(443 + 822)) -(816 + 900))) and (v96==(242 -(211 + 31)))) then local v113=0;while true do if ((3471>(1249 -(41 + 439))) and (v113==(1 + 0))) then v96=1 + 0;break;end if (((1685 -(1232 + 317 + 16 + 120))==v113) or (((5280 -(578 + 1157)) + 1250)<(4037 -(388 + 97 + 814)))) then local v120=0 + 0;while true do if ((720==(1183 -463)) and (v120==(166 -(90 + 75)))) then v113=746 -(448 + 297);break;end if ((v120==(0 + 0)) or ((5099 -1774)<=(92 + 77 + 2280))) then v89=v81[v66];v90=v89[1];v120=2 -1;end end end end end end break;end end break;end end end end v65=3;end if (v65==0) then v66=1;v67= -1;v65=1;end if (v65==3) then A,B=v27(v10(v70));if  not A[1] then local v91=0;local v92;while true do if (0==v91) then v92=v32[4][v66] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end end end;end return v29(v28(),{},v16)(...);end if (v17==1) then function v20(v35,v36,v37)if v37 then local v71=1387 -(74 + 1313);local v72;while true do if (v71==(0 + 0)) then v72=(v35/((1255 -(1133 + 120))^(v36-(1 -0))))%((1200 -(506 + 692))^(((v37-(1518 -(1433 + 84))) -(v36-((99 -(25 + 72)) -1))) + (2 -1)));return v72-(v72%(704 -(258 + 445)));end end else local v73=2^(v36-(959 -(557 + 140 + 261)));return (((v35%(v73 + v73))>=v73) and (1091 -(118 + 662 + 310))) or (765 -(275 + 490));end end v21=nil;function v21()local v52=v1(v15,v18,v18);v18=v18 + 1;return v52;end v22=nil;v17=2;end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v53=1041 -(830 + 211);local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v53~=(633 -(391 + 240))) then else v58=nil;v59=nil;v53=3;end if (v53~=(1 + 2)) then else v60=nil;v61=nil;v53=1 + 3;end if (v53~=0) then else v54=0;v55=nil;v53=1;end if (v53==(4 -3)) then v56=nil;v57=nil;v53=2;end if ((505 -(20 + 481))==v53) then while true do if (v54==(4 -2)) then local v77=1859 -(1645 + 214);while true do if (v77==1) then v54=1594 -(1352 + 239);break;end if (v77==(0 -0)) then v59=nil;v60=nil;v77=1090 -(478 + 611);end end end if (v54~=(0 -0)) then else local v78=0 -0;while true do if (v78==(1 + 0)) then v54=1 + 0;break;end if (v78==0) then v55=0;v56=nil;v78=3 -2;end end end if (v54==(1 + 0)) then v57=nil;v58=nil;v54=3 -1;end if (v54==3) then v61=nil;while true do if (v55~=0) then else local v97=0 + 0;while true do if ((3 -1)==v97) then v55=2 -1;break;end if (v97~=(1 + 0)) then else v58={};v59={v56,v57,nil,v58};v97=2;end if (v97~=(0 -0)) then else v56={};v57={};v97=1;end end end if ((1 + 0)~=v55) then else local v98=1576 -(1303 + 273);local v99;while true do if (v98==(473 -(181 + 292))) then v99=1347 -(662 + 685);while true do if (v99~=(2 -1)) then else for v106=1,v60 do local v107=726 -(599 + 127);local v108;local v109;local v110;while true do if (v107~=(323 -(171 + 151))) then else v110=nil;while true do if ((1 -0)==v108) then if (v109==(1 + 0)) then v110=v21()~=0;elseif (v109==2) then v110=v24();elseif (v109==(712 -(538 + 171))) then v110=v25();end v61[v106]=v110;break;end if (v108~=(732 -(348 + 384))) then else local v122=0 + 0;while true do if (v122==(0 -0)) then local v127=0 -0;while true do if (v127~=1) then else v122=1 + 0;break;end if ((0 -0)==v127) then v109=v21();v110=nil;v127=901 -(831 + 69);end end end if (v122~=(1 -0)) then else v108=1 -0;break;end end end end break;end if (v107~=(0 + 0)) then else v108=1367 -(469 + 898);v109=nil;v107=2 -1;end end end v59[3 + 0]=v21();v99=6 -4;end if (v99~=(0 -0)) then else v60=v23();v61={};v99=1 + 0;end if (v99==(2 + 0)) then v55=1181 -(74 + 1105);break;end end break;end end end if (v55~=2) then else local v100=0 -0;while true do local v103=1470 -(922 + 548);while true do if (v103==(0 -0)) then if ((0 + 0)==v100) then local v105=1488 -(367 + 1121);while true do if (v105~=(1 -0)) then else v100=1;break;end if (v105==(867 -(258 + 609))) then for v114=1869 -(826 + 1042),v23() do local v115=0 + 0;local v116;local v117;while true do if (v115~=(0 -0)) then else v116=0 + 0;v117=nil;v115=1;end if (v115~=(1 -0)) then else while true do if (v116==(0 + 0)) then v117=v21();if (v20(v117,1,1)==(0 + 0)) then local v191=0;local v192;local v193;local v194;local v195;local v196;while true do if (v191~=1) then else v194=nil;v195=nil;v191=36 -(11 + 23);end if ((0 + 0)~=v191) then else v192=0 + 0;v193=nil;v191=185 -(116 + 68);end if (v191~=2) then else v196=nil;while true do if (v192==(0 -0)) then local v222=1947 -(222 + 1725);while true do if (v222==(0 -0)) then local v251=0;while true do if (v251==(0 + 0)) then v193=0;v194=nil;v251=2 -1;end if (v251==(3 -2)) then v222=1383 -(677 + 705);break;end end end if (v222~=(830 -(578 + 251))) then else v192=1 -0;break;end end end if (v192==(482 -(434 + 47))) then local v223=0;while true do if (v223~=(1654 -(548 + 1105))) then else v192=7 -5;break;end if (v223==(0 + 0)) then v195=nil;v196=nil;v223=3 -2;end end end if (v192~=2) then else while true do if (v193~=(0 -0)) then else local v252=348 -(31 + 317);local v253;while true do if (v252==(0 + 0)) then v253=0 -0;while true do if (v253~=(0 + 0)) then else local v280=362 -(125 + 237);while true do if (v280==1) then v253=4 -3;break;end if (v280==(790 -(723 + 67))) then v194=v20(v117,2,491 -(386 + 102));v195=v20(v117,4,1088 -(901 + 181));v280=1185 -(576 + 608);end end end if (v253==(873 -(270 + 602))) then v193=1 -0;break;end end break;end end end if (v193~=1) then else local v254=710 -(60 + 650);local v255;local v256;while true do if (v254~=(930 -(130 + 799))) then else while true do if (v255==(1899 -(542 + 1357))) then v256=0 + 0;while true do if (v256~=(368 -(36 + 332))) then else local v283=0;local v284;while true do if (v283~=(0 + 0)) then else v284=0 + 0;while true do if (v284==0) then v196={v22(),v22(),nil,nil};if (v194==(0 + 0)) then local v289=0 + 0;while true do if (v289~=(0 -0)) then else v196[3 + 0]=v22();v196[3 + 1]=v22();break;end end elseif (v194==1) then v196[7 -4]=v23();elseif (v194==(3 -1)) then v196[2 + 1]=v23() -(2^16);elseif (v194==(9 -6)) then local v294=798 -(666 + 132);local v295;while true do if (v294==(873 -(400 + 473))) then v295=1034 -(695 + 339);while true do if (v295==(761 -(49 + 712))) then v196[557 -(16 + 538)]=v23() -((1510 -(557 + 951))^(1 + 15));v196[4]=v22();break;end end break;end end end v284=838 -(346 + 491);end if (v284==(1106 -(387 + 718))) then v256=1;break;end end break;end end end if (v256==(2 -1)) then v193=1418 -(1316 + 100);break;end end break;end end break;end if (v254==(1081 -(952 + 129))) then v255=0;v256=nil;v254=930 -(607 + 322);end end end if (v193==(7 -4)) then if (v20(v195,8 -5,3)==(1 + 0)) then v196[12 -8]=v61[v196[4]];end v56[v114]=v196;break;end if (v193~=(1 + 1)) then else local v258=576 -(215 + 361);local v259;while true do if (v258==(0 + 0)) then v259=0;while true do if (v259==(1 + 0)) then v193=1227 -(1138 + 86);break;end if (v259==0) then local v281=568 -(27 + 541);while true do if (v281==(714 -(147 + 566))) then v259=1;break;end if ((1578 -(1514 + 64))~=v281) then else if (v20(v195,2 -1,495 -(174 + 320))==(1923 -(145 + 1777))) then v196[1 + 1]=v61[v196[2]];end if (v20(v195,2,2 + 0)==(1 -0)) then v196[3]=v61[v196[3]];end v281=1 + 0;end end end end break;end end end end break;end end break;end end end break;end end break;end end end for v118=1,v23() do v57[v118-(960 -(880 + 79))]=v28();end v105=1 + 0;end end end if (v100==(1 + 0)) then for v111=1 + 0,v23() do v58[v111]=v23();end return v59;end break;end end end end end break;end end break;end end end v17=5;end end end vv8(),...);end
