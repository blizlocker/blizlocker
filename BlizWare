-- This file was generated using Luraph Obfuscator v13.5.9

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then v24=function()local v38=v23();local v39=v23();return (( -(1 + 1) * v20(v39,1598 -(919 + 647))) + (1 -(0 -0))) * (2^(v20(v39,28 -7,688 -(25 + (1436 -(536 + 268)))) -(296 + 727))) * ((((v20(v39,150 -(32 + 117),17 + 3) * ((8 -6)^32)) + v38)/((4 -(2 -0))^(118 -66))) + (1 -0));end;v25=nil;v25=function(v30)local v40=0 + 0;local v41;local v42;while true do if (v40==(1385 -(1369 + 16))) then v41=nil;if  not v30 then v30=v23();if (v30==(0 -0)) then return "";end end v40=1;end if ((1733 -(1568 + 163))==v40) then v42={};for v73=1348 -(1325 + 22), #v41 do v42[v73]=v2(v1(v3(v41,v73,v73)));end v40=805 -((2415 -(1609 + 134)) + 130);end if (v40==((3 -0) + 0)) then return v6(v42);end if (v40==(1 + 0)) then v41=v3(v15,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;v40=2 + 0;end end end;v26=v23;v17=4;end if (v17==2) then v22=function()local v43,v44=v1(v15,v18,v18 + (109 -(40 + 67)));v18=v18 + 2 + 0;return (v44 * (22 + 234)) + v43;end;v23=nil;v23=function()local v45,v46,v47,v48=v1(v15,v18,v18 + (13 -10));v18=v18 + 2 + 2;return (v48 * 16777216) + (v47 * 65536) + (v46 * (614 -(136 + 222))) + v45;end;v24=nil;v17=3;end if (v17==1) then v20=function(v31,v32,v33)if v33 then local v63=(v31/(((2 + 0) -0)^(v32-(1491 -(954 + 536)))))%(2^(((v33-(1540 -(1499 + 40))) -(v32-((758 -381) -(369 + 7)))) + 1));return v63-(v63%(1 -0));else local v64=(1485 -(643 + 840))^(v32-(1 + 0));return (((v31%(v64 + v64))>=v64) and 1) or (0 + 0);end end;v21=nil;v21=function()local v49=0 -0;local v50;while true do if (v49==1) then return v50;end if (v49==(0 + 0)) then v50=v1(v15,v18,v18);v18=v18 + 1 + 0;v49=1;end end end;v22=nil;v17=2;end if (v17==4) then v27=nil;v27=function(...)return {...},v11("#",...);end;v28=nil;v28=function()local v51=0 -0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51==(5 -3)) then v56=nil;v57=nil;v51=1351 -(819 + 529);end if (v51~=3) then else v58=nil;v59=nil;v51=1728 -(1361 + 363);end if (v51==(0 -0)) then v52=909 -(841 + 68);v53=nil;v51=4 -3;end if (v51~=(2 + 2)) then else while true do if (v52==0) then local v75=0;while true do if (v75==(1533 -(399 + 1134))) then v53=1222 -(783 + 439);v54=nil;v75=1 -0;end if (v75==(1 + 0)) then v52=1886 -(109 + 1776);break;end end end if (v52==(1854 -(1112 + 740))) then v57=nil;v58=nil;v52=3;end if (v52==(1 -0)) then local v76=0 + 0;while true do if (v76~=(1 + 0)) then else v52=2;break;end if (v76==(0 + 0)) then v55=nil;v56=nil;v76=1118 -(1091 + 26);end end end if (v52==(3 + 0)) then v59=nil;while true do local v77=0;while true do if (v77~=(850 -(356 + 494))) then else if (v53==2) then local v96=0 + 0;while true do if (v96~=1) then else for v104=1,v23() do v56[v104]=v23();end return v57;end if (v96~=0) then else local v101=648 -(568 + 80);while true do if (v101~=(1 + 0)) then else v96=1 + 0;break;end if (v101==0) then for v112=1737 -(1564 + 172),v23() do local v113=0;local v114;local v115;while true do if (v113~=(2 -1)) then else while true do if (v114==0) then v115=v21();if (v20(v115,2 -1,3 -2)==(0 -0)) then local v192=1820 -(930 + 890);local v193;local v194;local v195;local v196;local v197;local v198;while true do if (v192~=(2 + 1)) then else while true do if ((1 + 1)==v193) then v198=nil;while true do if (v194==2) then while true do if (v195~=(2 + 1)) then else if (v20(v197,1283 -(916 + 364),1 + 2)==(1 + 0)) then v198[4 + 0]=v59[v198[3 + 1]];end v54[v112]=v198;break;end if (v195==2) then local v272=0;local v273;local v274;while true do if (v272==(0 + 0)) then v273=1788 -(226 + 1562);v274=nil;v272=1;end if (v272~=(1 + 0)) then else while true do if (v273==(0 + 0)) then v274=0 + 0;while true do if (v274==0) then if (v20(v197,1,1)==(1 + 0)) then v198[2]=v59[v198[2 + 0]];end if (v20(v197,1947 -(1099 + 846),1 + 1)~=(1 + 0)) then else v198[3 + 0]=v59[v198[2 + 1]];end v274=1;end if (v274==(2 -1)) then v195=11 -8;break;end end break;end end break;end end end if (v195~=(1 + 0)) then else local v275=0 -0;local v276;while true do if (v275==(48 -(21 + 27))) then v276=0;while true do if (v276~=(94 -(84 + 9))) then else v195=8 -6;break;end if (v276~=(1334 -(605 + 729))) then else local v284=0;while true do if (v284~=(1 + 0)) then else v276=1;break;end if (v284==(0 -0)) then v198={v22(),v22(),nil,nil};if (v196==0) then local v290=0 + 0;local v291;local v292;while true do if ((1 + 0)~=v290) then else while true do if (v291~=0) then else v292=0 -0;while true do if ((0 -0)~=v292) then else v198[3 + 0]=v22();v198[12 -8]=v22();break;end end break;end end break;end if ((0 + 0)==v290) then v291=0 -0;v292=nil;v290=1297 -(1034 + 262);end end elseif (v196==(1 + 0)) then v198[72 -(38 + 31)]=v23();elseif (v196==(3 -1)) then v198[3]=v23() -(2^(45 -29));elseif (v196==(2 + 1)) then local v297=0;local v298;while true do if (v297==(0 -0)) then v298=453 -(384 + 69);while true do if (v298==(357 -(85 + 272))) then v198[9 -6]=v23() -((725 -(343 + 380))^16);v198[13 -9]=v22();break;end end break;end end end v284=2 -1;end end end end break;end end end if ((1930 -(865 + 1065))~=v195) then else local v277=1783 -(1517 + 266);local v278;while true do if (v277~=(0 -0)) then else v278=0;while true do if (v278==1) then v195=664 -(346 + 317);break;end if (v278==(0 -0)) then v196=v20(v115,4 -2,2 + 1);v197=v20(v115,7 -3,822 -(147 + 669));v278=819 -(633 + 185);end end break;end end end end break;end if (v194~=0) then else local v256=0 -0;while true do if (v256==(2 -1)) then v194=1 -0;break;end if (v256==0) then local v279=1580 -(1461 + 119);while true do if ((0 -0)==v279) then v195=0 + 0;v196=nil;v279=1;end if (v279~=1) then else v256=2 -1;break;end end end end end if (v194==1) then v197=nil;v198=nil;v194=1 + 1;end end break;end if (1==v193) then v196=nil;v197=nil;v193=2 + 0;end if (v193==(0 + 0)) then v194=0;v195=nil;v193=1537 -(432 + 1104);end end break;end if (v192==(1176 -(1054 + 120))) then v197=nil;v198=nil;v192=1542 -(1175 + 364);end if (v192~=(0 + 0)) then else v193=0;v194=nil;v192=1;end if ((1 -0)==v192) then v195=nil;v196=nil;v192=239 -(74 + 163);end end end break;end end break;end if ((1525 -(276 + 1249))==v113) then v114=0 + 0;v115=nil;v113=1 + 0;end end end for v116=133 -(126 + 6),v23() do v55[v116-(219 -(133 + 85))]=v28();end v101=1387 -(1065 + 321);end end end end end if ((770 -(99 + 671))==v53) then local v97=1051 -(469 + 582);local v98;while true do if (v97~=(351 -(278 + 73))) then else v98=0;while true do if (v98==(1 + 0)) then local v110=0;while true do if (v110~=(1 -0)) then else v98=3 -1;break;end if (v110==(0 + 0)) then v56={};v57={v54,v55,nil,v56};v110=1;end end end if (v98==(730 -(39 + 689))) then v53=1;break;end if (v98==(502 -(68 + 434))) then local v111=0 + 0;while true do if (v111==(0 + 0)) then v54={};v55={};v111=289 -(73 + 215);end if (v111==(1 + 0)) then v98=254 -(184 + 69);break;end end end end break;end end end v77=1;end if (v77~=(1856 -(71 + 1784))) then else if (v53~=(1 + 0)) then else local v99=1628 -(1358 + 270);while true do if (v99==(1750 -(916 + 834))) then local v102=0 -0;while true do if (v102==1) then v99=3 -2;break;end if ((1150 -(926 + 224))~=v102) then else v58=v23();v59={};v102=1 + 0;end end end if (v99==1) then for v106=1,v58 do local v107=0 -0;local v108;local v109;while true do if (v107~=(0 + 0)) then else local v118=0;while true do if (v118==(0 -0)) then v108=v21();v109=nil;v118=1 + 0;end if (v118~=(1456 -(1348 + 107))) then else v107=1;break;end end end if (v107==(632 -(37 + 594))) then if (v108==(1 -0)) then v109=v21()~=(0 + 0);elseif (v108==(2 -0)) then v109=v24();elseif (v108~=(1 + 2)) then else v109=v25();end v59[v106]=v109;break;end end end v57[3]=v21();v99=4 -2;end if ((2 + 0)==v99) then v53=976 -(604 + 370);break;end end end break;end end end break;end end break;end if (v51==(491 -(120 + 370))) then v54=nil;v55=nil;v51=1 + 1;end end end;v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v34)if (v1(v34,2)==79) then v19=v0(v3(v34,1,1));return "";else local v65=0;local v66;while true do if (v65==0) then v66=v2(v0(v34,16));if v19 then local v78=0;local v79;while true do if (v78==0) then v79=v5(v66,v19);v19=nil;v78=1;end if (1==v78) then return v79;end end else return v66;end break;end end end end);v20=nil;v17=1;end if (v17==5) then v29=nil;v29=function(v35,v36,v37)local v60=v35[1];local v61=v35[2];local v62=v35[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (2==v67) then v72=nil;v72=function()local v80=v60;local v81=v61;local v82=v62;local v83=v27;local v84={};local v85={};local v86={};for v91=0 + 0,v71 do if ((v91>=v82) or ((13553 -10323)<((4777 -(53 + 45)) -2331))) then v84[v91-v82]=v70[v91 + 1 + 0];else v86[v91]=v70[v91 + (628 -(84 + 543)) + 0];end end local v87=(v71-v82) + 1 + 0;local v88;local v89;while true do local v92=0 -0;local v93;while true do if ((v92==(823 -(55 + 768))) or ((1421 + 111)<(1798 -1392))) then v93=0 -0;while true do if ((v93==((0 -0) + 0)) or ((4453 -(5 + 23))<(2614 + 33))) then local v100=1984 -((4587 -3519) + 916);while true do if (((3443 -2123)>(753 + 78)) and (v100==(1318 -(1107 + 211)))) then v88=v80[v68];v89=v88[(1092 -(673 + 418)) + (0 -0)];v100=1547 -(734 + 812);end if (((9380 -5627)>=(1336 + 393)) and (v100==(1754 -(195 + 1558)))) then v93=1 + 0;break;end end end if ((((346 + 1307) -(1213 + (965 -(109 + 417))))==v93) or ((4383 -(400 + 387))<=(2232 -(1630 + 171)))) then if ((v89<=((24 + 5) -14)) or (1132>=(4222 -(20 + 15 + 47)))) then if (((2235 -(26 + 769))<(4115 + (1159 -546))) and (v89<=(1 + 6))) then if ((v89<=(1382 -(103 + 1276))) or ((1761 -726)>(158 + 2310))) then if (((4575 -(731 + 147))>=(3000 + 554)) and (v89<=(563 -(239 + 323)))) then if ((v89>((1142 -(772 + 370)) -0)) or ((2305 -(342 + 39))>=(3984 -(158 + 148 + 1281)))) then local v120=103 -(85 + 18);local v121;while true do if ((v120==(0 -(0 -0))) or ((6302 -(375 + 1329))<((1345 -771) -365))) then v121=v88[1559 -(372 + 1185)];v86[v121]=v86[v121]();break;end end else local v122=1710 -(1290 + 420);local v123;local v124;local v125;while true do if (((3248 -(1184 + 71))<=(10203 -6189)) and (v122==(1 + 0 + 0))) then v125=nil;while true do if ((v123==0) or ((3309 -(635 + 162))<(583 + 161))) then v124=v88[767 -(629 + 136)];v125={};v123=1 + (1386 -(56 + 1330));end if ((v123==(2 -1)) or (((4087 -(769 + 243)) + 584)==(5436 -(310 + (2029 -1406))))) then for v218=1 + 0, #v85 do local v219=(1358 -(886 + 472)) + 0;local v220;local v221;while true do if ((v219==(0 + 0)) or (((1726 + 1399) -1141)>(5451 -(273 + 234)))) then v220=(776 -(243 + 533)) -0;v221=nil;v219=2 -1;end if (((25 + 36)==(226 -165)) and (v219==(1 + 0))) then while true do if (((5757 -4264)==(2510 -((1681 -(590 + 491)) + 417))) and ((0 -0)==v220)) then v221=v85[v218];for v261=0, #v221 do local v262=0 -0;local v263;local v264;local v265;local v266;while true do if ((v262==(2 + 0)) or ((45 + 1802)<(2126 -(331 + 1037)))) then while true do if (((315 + 249)==(952 -388)) and (0==v263)) then v264=v221[v261];v265=v264[2 -1];v263=1 + 0 + 0;end if ((v263==(1 -0)) or ((2063 -(963 + 731))==(5442 -(729 + 870)))) then v266=v264[1 + 1];if (((3518 + 881)==((8784 -4057) -(217 + 111))) and (v265==v86) and (v266>=v124)) then local v285=0 + 0;local v286;local v287;while true do if (((1118 + 1333)<=(2811 + 1446)) and (v285==(0 + 0))) then v286=(1842 -(1096 + 746)) + 0;v287=nil;v285=1 + (0 -0);end if (((1652 + 2801)>(2198 -1266)) and (v285==(1616 -(998 + 617)))) then while true do if ((v286==(0 + 0)) or ((5520 -3302)<(3247 -(50 + 1169)))) then v287=0 -0;while true do if ((v287==(0 + 0)) or ((7252 -2697)<=(830 -308))) then v125[v266]=v265[v266];v264[669 -(179 + 489)]=v125;break;end end break;end end break;end end end break;end end break;end if ((v262==(0 + 0)) or ((7886 -5645)>=(2566 + 803))) then v263=0 -0;v264=nil;v262=1308 -(982 + 325);end if (((10445 -5623)>=2922) and (v262==(116 -(83 + 32)))) then v265=nil;v266=nil;v262=3 -1;end end end break;end end break;end end end break;end end break;end if ((v122==(0 + 0)) or ((4759 -(1241 + 19))==((7081 -(606 + 392)) -(6438 -3211)))) then v123=0 + 0;v124=nil;v122=857 -(845 + 11);end end end elseif ((v89>(127 -((89 -55) + 91))) or ((262 + 205)>(5801 -(14 + 1589 + 195)))) then v86[v88[2]][v88[1969 -(1077 + 889)]]=v86[v88[(6 + 4) -6]];elseif (((66 -41)<=(5093 -(1562 + 351))) and v86[v88[2 -0]]) then v68=v68 + 1 + 0;else v68=v88[1 + 2];end elseif ((v89<=(1857 -((2509 -(430 + 310)) + 83))) or ((13621 -9191)<4314)) then if ((v89==(3 + 1)) or (((1098 -(45 + 200)) + 3039)<=(525 + 2529))) then v86[v88[2 + 0 + 0]]=v86[v88[4 -1]];else v86[v88[1 + 1]]();end elseif ((v89>(6 + 0)) or ((914 -(123 + 618))==(1072 -(521 + 166)))) then local v128=0 -0;local v129;local v130;local v131;while true do if ((v128==(1 + 0)) or ((1601 -((2098 -(345 + 923)) + 186))>=(2843 -(1182 + 188)))) then v131=nil;while true do if (((0 -0)==v129) or ((3937 -(98 + 1508))<(4901 -3550))) then local v206=0 + 0;while true do if (((0 -0)==v206) or ((336 + 123)>(746 + 2452))) then v130=1826 -(1128 + 698);v131=nil;v206=3 -2;end if ((v206==(4 -(1 + 2))) or ((4578 -(109 + (1461 -(1069 + 101))))<((6263 -3733) -(933 + 671)))) then v129=1048 -(703 + 344);break;end end end if (((585 + 400)<(10390 -6278)) and (v129==(2 -(1980 -(878 + 1101))))) then while true do if (((565 -(8 + 14))<=1848) and (((2481 -(53 + 567)) -(993 + 868))==v130)) then v131=v88[1 + 1];v86[v131]=v86[v131](v12(v86,v131 + 1 + 0,v69));break;end end break;end end break;end if ((v128==(1917 -((5910 -4073) + 80))) or ((9803 -7099)<(96 + 563))) then v129=0;v130=nil;v128=1 + 0;end end else local v132=0 + 0;local v133;local v134;local v135;local v136;local v137;local v138;while true do if (((1176 + 285)<=(9783 -7091)) and (v132==(5 -3))) then v137=nil;v138=nil;v132=6 -3;end if (((820 + 1041)>(3058 -(1509 -(7 + 15)))) and ((4 -1)==v132)) then while true do if ((((2243 -(223 + 550)) -(761 + 491 + 216))==v133) or ((705 + 1735)<=1234)) then for v222=1 + 0,v135 do v86[v136 + v222]=v137[v222];end v138=v137[1386 -(1125 + 260)];v133=2 + 1;end if (((6008 -(500 + 1070))>=(627 + 3445)) and (v133==(1 + 0))) then local v207=902 -(755 + 147);while true do if (((164 + 4584)>=(2349 -(104 + 1721))) and (v207==1)) then v133=5 -3;break;end if (((0 -0)==v207) or ((629 -(46 + 10))>=(2836 -(298 + 904)))) then v136=v134 + 2 + 0;v137={v86[v134](v86[v134 + 1 + 0],v86[v136])};v207=1 + 0;end end end if ((4628==4628) and (v133==(0 -0))) then v134=v88[1 + 1];v135=v88[3 + 1];v133=1 + 0;end if (((328 + 1695)==(3733 -(1144 + 566))) and (v133==(1447 -(834 + 610)))) then if (v138 or ((2289 -(133 + (372 -94)))>=((3502 + 2860) -3241))) then local v236=(354 -(64 + 290)) + 0;local v237;while true do if (((822 -601)<(2015 + 552)) and (v236==(1748 -(1193 + 555)))) then v237=1543 -(290 + 1253);while true do if ((((1290 -(95 + 1195)) + (0 -0))==v237) or ((1279 -(79 + 331))<(1606 -(365 + 873)))) then v86[v136]=v138;v68=v88[3];break;end end break;end end else v68=v68 + 1 + 0;end break;end end break;end if (((11224 -7989)==(1555 + 1680)) and (v132==(0 -0))) then v133=0 + 0;v134=nil;v132=377 -(350 + 26);end if (((5404 -4072)<(3130 -(259 + 756))) and (v132==(3 -2))) then v135=nil;v136=nil;v132=2 -0;end end end elseif ((v89<=(20 -9)) or ((888 + 717)==(11611 -8160))) then if (((3060 + 1191)==((7440 -5020) + (2764 -(814 + 119)))) and (v89<=(9 + 0))) then if ((4885>=(405 + 1554)) and (v89==(1454 -(1400 + 46)))) then local v139=0 -0;local v140;local v141;local v142;local v143;local v144;while true do if ((v139==(0 + 0)) or ((1595 + 1765)<=(31 + 736))) then v140=1850 -(1046 + 804);v141=nil;v139=1536 -(646 + 889);end if ((v139==(2 + (262 -(112 + 150)))) or ((5379 -(900 + 44))<=(5305 -(1045 + 903)))) then v144=nil;while true do if ((v140==(871 -(30 + 841))) or ((4748 -(4557 -2804))<=(6705 -4205))) then v141=1311 -(204 + (2401 -1294));v142=nil;v140=842 -(362 + 479);end if (((329 + 283)==(2722 -2110)) and ((3 -1)==v140)) then while true do if (((2778 + 293)>=(1630 -(151 + 868))) and (v141==(709 -(444 + 265)))) then local v245=1006 -(501 + 505);local v246;while true do if (((2312 + 2482)>=(5225 -3032)) and (v245==(1345 -(267 + 1078)))) then v246=0 + 0;while true do if (((10103 -6488)<=(708 + (4217 -(324 + 141)))) and (v246==(1314 -(1193 + 121)))) then v142=v88[1271 -(773 + 496)];v143={v86[v142](v12(v86,v142 + (2 -1),v69))};v246=2 -1;end if ((v246==(1 + 0)) or ((1661 -(261 + 1315))>=(2488 -(406 + 460)))) then v141=1554 -(792 + 761);break;end end break;end end end if (((3429 -(55 + 275))>(644 + 610 + 1084)) and (v141==(1 + 0))) then v144=0 + 0;for v251=v142,v88[4 + 0] do local v252=1565 -(1009 + 556);local v253;while true do if (((6138 -(2059 + 1144))>807) and (v252==(840 -(347 + 493)))) then v253=0 -0;while true do if ((v253==(0 + 0 + 0)) or ((10316 -6586)==(1617 + 196 + 1180))) then v144=v144 + 1 + 0;v86[v251]=v143[v144];break;end end break;end end end break;end end break;end if ((v140==1) or ((5177 -((760 -(62 + 10)) + 220))<(4793 -2322))) then local v208=996 -(624 + 372);while true do if (((3479 -(592 + 599))<(7742 -3415)) and (1==v208)) then v140=1 + 1;break;end if ((v208==(779 -((963 -(513 + 40)) + 369))) or ((6077 -3440)>=(8935 -6234))) then v143=nil;v144=nil;v208=1 + 0 + 0;end end end end break;end if ((v139==(1 + 0)) or ((5087 -(129 + 32))<=(1243 + 841))) then v142=nil;v143=nil;v139=2 + 0 + 0;end end else v86[v88[85 -(65 + 18)]]=v37[v88[3]];end elseif ((((7562 -(1530 + 466)) -(203 + 459 + 93))>=((8797 -(1111 + 144)) -4426)) and (v89==(24 -14))) then v86[v88[738 -(231 + 505)]]=v29(v81[v88[1187 -((729 -(191 + 512)) + 1158)]],nil,v37);else for v190=v88[5 -(740 -(189 + 548))],v88[1451 -(458 + 990)] do v86[v190]=nil;end end elseif ((v89<=(1 + 12)) or ((1948 -(1171 + 94))==(4192 + 526))) then if (((3695 -2100)<((20043 -13324) -(1595 + 240))) and (v89>(3 + 2 + 7))) then v86[v88[1872 -(1126 + (2917 -2173))]]=v36[v88[3 + 0]];else do return;end end elseif ((((1210 + 2972) -(194 + 886))<=(4886 -(128 + 85 + 370))) and (v89==(2 + 12))) then local v148=0 -0;local v149;while true do if ((v148==(423 -(195 + 228))) or ((2520 -(812 + 90))<=1151)) then v149=v88[(1456 -(816 + 637)) -1];do return v86[v149](v12(v86,v149 + (1991 -(1944 + 46)),v88[5 -2]));end break;end end elseif ( not v86[v88[1989 -(167 + 1820)]] or ((12695 -9588)<(504 + 347))) then v68=v68 + (3 -2);else v68=v88[2 + 1];end elseif ((v89<=(10 + 13)) or ((4600 -3034)>(3699 -(679 + 146)))) then if ((v89<=(10 + 9)) or ((2798 -(63 + 1145))==(10247 -6593))) then if (((1510 -(563 + 490))==(1598 -1141)) and (v89<=(1982 -(1758 + 207)))) then if (((1705 -(71 + 150))<=(2614 -(9 + 22))) and (v89>((12 + 13) -(1065 -(930 + 126))))) then if ((2168<=(4410 -(1199 + 668))) and (v86[v88[1812 -(19 + 60 + (3717 -1986))]]<v88[4])) then v68=v68 + (1756 -(1691 + 64));else v68=v88[842 -(336 + 503)];end else local v150=0 + 0;local v151;local v152;local v153;while true do if ((v150==(0 -0)) or (((6330 + 302) -3883)<=(3261 -(907 + 304)))) then v151=0 + 0;v152=nil;v150=4 -3;end if ((v150==(1 + 0)) or ((17 + 143)>(1702 -(1350 + 175)))) then v153=nil;while true do if ((3722==(14130 -10408)) and (v151==(1072 -(25 + 1047)))) then local v209=0 -0;while true do if (((4759 -2582)==(757 + 1420)) and (v209==((1 + 0) -0))) then v151=2 -1;break;end if ((v209==(351 -((278 -(238 + 24)) + 335))) or ((593 -(22 + 27))<=(1289 -(847 + 290)))) then v152=0 + 0;v153=nil;v209=1 + 0;end end end if (((671 + 4260)>=(1306 -(515 + 255))) and (v151==(1894 -(916 + 977)))) then while true do if ((((6178 -(1675 + 180)) -(33 + 27))>(6072 -3444)) and (v152==(1651 -(84 + 138 + 1429)))) then v153=v88[2 + 0];do return v12(v86,v153,v69);end break;end end break;end end break;end end end elseif (((4167 -(460 + 904))>=(3452 -(427 + 815))) and (v89==((52 + 0) -34))) then local v154=0 + 0;local v155;local v156;local v157;local v158;local v159;local v160;while true do if (((1466 + 3026)>=(1436 + 1058 + 193)) and (v154==(1738 -(1238 + 499)))) then v157=nil;v158=nil;v154=2 + 0;end if (((4096 -(9 + 2 + 8))==(5033 -(582 + 374))) and (v154==2)) then v159=nil;v160=nil;v154=971 -(559 + 409);end if (((110 + 2018)<(22585 -18066)) and (v154==(0 + 0))) then v155=0 -0;v156=nil;v154=329 -(248 + 75 + 5);end if (((2612 + 132 + 303)<=(567 + 3231)) and (v154==(2 + 1))) then while true do if ((((16 -10) -4)==v155) or ((2520 -(689 + 136))==(4413 -(3681 -(494 + 600))))) then v160=nil;while true do if (((2673 -(348 + 299))>=(2303 -(675 + 723))) and (v156==((1380 -995) -(39 + 345)))) then local v247=(2384 -(696 + 568)) -(23 + 1097);local v248;while true do if ((((12730 -(99 + 419)) -7935)==(16763 -12486)) and (v247==(0 -0))) then v248=(0 + 0) -0;while true do if ((v248==(1246 -(151 + 1094))) or ((2403 -(444 + 1309))==(4689 -(347 + 256)))) then v156=1 + 1;break;end if ((v248==0) or ((5023 -(800 + 11))==(2803 + 1362))) then v69=(v159 + v157) -(1 + 0);v160=0 -0;v248=1 + 0;end end break;end end end if (((9856 -5675)>=1631) and (v156==(1413 -(994 + 419)))) then local v249=164 -(125 + 39);local v250;while true do if ((v249==((5650 -4070) -(1160 + 420))) or ((83 + 611)==(8438 -6343))) then v250=0 -0;while true do if ((v250==(1 + 0)) or ((2900 + 13)<(423 + 2294))) then v156=412 -((1680 -(419 + 1226)) + 376);break;end if ((v250==(0 + (1572 -(139 + 1433)))) or ((11129 -8523)<(1389 -831))) then v157=v88[2 + 0];v158,v159=v83(v86[v157](v12(v86,v157 + (410 -(359 + 50)),v88[1170 -(213 + 954)])));v250=3 -2;end end break;end end end if (((4513 -(45 + 45))>(7749 -4269)) and (v156==(1 + 1))) then for v254=v157,v69 do local v255=0;while true do if (((0 + 0)==v255) or ((2167 -724)>(2843 + 1460))) then v160=v160 + (1155 -(870 + 150 + 134));v86[v254]=v158[v160];break;end end end break;end end break;end if (((2530 -(421 + 215))==(2372 -(149 + 329))) and (v155==(3 -2))) then local v210=1117 -(24 + 721 + 372);while true do if ((v210==(0 -0)) or ((11207 -7213)>=(13021 -8521))) then v158=nil;v159=nil;v210=2 -1;end if ((v210==(313 -(311 + 1))) or ((3351 -1361)>=((6069 -3824) + 1962))) then v155=945 -(562 + 381);break;end end end if ((v155==(0 + 0)) or ((3809 + 1028)<(7325 -4293))) then v156=1533 -(853 + 680);v157=nil;v155=(1 -0) + 0;end end break;end end else local v161=910 -(360 + 550);local v162;local v163;while true do if (((1 -(232 -(118 + 114)))==v161) or ((14054 -9155)==(862 + 598))) then while true do if (((9834 -6005)>=(8810 -(7190 -(95 + 1831)))) and (v162==(0 + 0))) then v163=v88[(1032 -(125 + 14)) -(378 + 513)];v86[v163](v12(v86,v163 + (4 -3),v88[323 -(36 + 284)]));break;end end break;end if (((129 -84)<=((3920 -2084) + 1628)) and (v161==(0 -0))) then local v200=(1366 -(934 + 432)) + 0;while true do if (((1961 -(30 + 498))==(2797 -(362 + 1002))) and (v200==((406 -(280 + 122)) -3))) then v161=1 + (0 -0);break;end if ((v200==(0 + (0 -0))) or ((168 + 2230)<(968 -305))) then v162=0 + 0;v163=nil;v200=1;end end end end end elseif (((2506 -(318 + 1137))==(655 + 396)) and (v89<=(15 + (18 -(11 + 1))))) then if ((v89>(18 + 2 + 0)) or ((17 + 81)==(200 + 220))) then if (((3289 -(279 + 1089))<=(13193 -(23472 -13403))) and (v86[v88[1 + 0 + 1]]==v88[3 + 1])) then v68=v68 + 1 + 0;else v68=v88[3 + 0];end else local v164=613 -(240 + 373);local v165;local v166;while true do if (((1419 + 575)==(3588 -(1345 + 249))) and (v164==(0 + 0))) then v165=0 -0;v166=nil;v164=1085 -(769 + 315);end if (((4366 + 275)>(9863 -(8294 -(11 + 1153)))) and (v164==(774 -(224 + 549)))) then while true do if (((1749 -(103 + 199))>(925 -(123 + 239))) and (v165==(1798 -(1143 + 655)))) then v166=v88[744 -(12 + 730)];v86[v166]=v86[v166](v86[v166 + (4 -3)]);break;end end break;end end end elseif ((v89==(2 + 20)) or ((945 + 944)>(3454 -(572 + 117)))) then local v167=0 + 0;local v168;local v169;while true do if (((7922 -5672)==(2722 -(334 + 138))) and (v167==(1907 -(527 + 1379)))) then v86[v168 + (3 -2)]=v169;v86[v168]=v169[v88[1 + 3]];break;end if ((v167==(1478 -(365 + 1104 + 9))) or ((2635 -(236 + 727))>=(3345 -(1003 + 434)))) then local v203=0 -0;while true do if ((v203==(2 -1)) or ((1585 -(314 + 868))==((403 + 1202) -(463 + 146)))) then v167=(1 + 0) -0;break;end if (((0 -0)==v203) or ((1627 + 179)==(3406 -2101))) then v168=v88[(1401 -(1156 + 240)) -3];v169=v86[v88[2 + 1]];v203=1 -0;end end end end elseif (((833 + 2341)>=(691 + (12 -6))) and (v88[2 + 0]==v86[v88[418 -((618 -383) + 179)]])) then v68=v68 + (80 -(15 + (1545 -(686 + 795))));else v68=v88[14 -11];end elseif ((v89<=(2 + 25)) or ((1134 + 661 + 928)<=1209)) then if ((v89<=(21 + 4)) or ((908 -(257 + 342))>=(6468 -3700))) then if (((4062 -(241 + 253))>(5163 -1674)) and (v89==(1542 -(761 + 757)))) then v86[v88[5 -(6 -3)]]=v88[2 + 1 + 0];else local v171=1158 -(1004 + 154);local v172;local v173;local v174;local v175;local v176;while true do if ((v171==(0 + 0)) or ((3548 -1810)>=(13721 -8846))) then v172=0 -(0 + 0);v173=nil;v171=319 -(55 + 263);end if (((493 -284)<(17753 -(43278 -29606))) and (((1609 -(419 + 1183)) -5)==v171)) then v176=nil;while true do if ((v172==(1 + 0)) or (((2749 + 7272) -6579)==(63 + 138 + (5556 -3562)))) then local v212=0 -0;local v213;while true do if (((2742 -(814 + (1400 -(644 + 391))))<=(3157 + 168)) and (v212==(0 + 0))) then v213=0 -0;while true do if ((v213==(1963 -(143 + 148 + 1671))) or (((1038 -(290 + 69)) + 959)>3570)) then v172=5 -(7 -4);break;end if (((4887 -2411)>(2935 -(95 + 60 + 1774))) and (v213==(0 -0))) then v69=(v175 + v173) -((1451 -(920 + 529)) -1);v176=0 + 0;v213=1;end end break;end end end if (((770 -417)<=(3862 -(1654 + 72))) and ((0 + 0 + 0)==v172)) then local v214=0 + 0;local v215;while true do if ((v214==(300 -((453 -290) + 137))) or (131>(2337 + 1584))) then v215=0 -0;while true do if ((v215==(1428 -(235 + 88 + (2051 -(501 + 445))))) or ((1269 + 2041)<(6187 -4639))) then local v257=(0 + 0) -0;while true do if (((4471 -1101)>(857 + 1686)) and (v257==(319 -((400 -(88 + 54)) + 61)))) then v173=v88[6 -4];v174,v175=v83(v86[v173](v86[v173 + 1]));v257=2 -(2 -1);end if ((v257==(1810 -(232 + 1577))) or ((15110 -10755)<=((2915 -1381) -(62 + 431)))) then v215=(1225 -(1088 + 136)) -0;break;end end end if (((2737 -(44 + 939))>=(2421 -(705 + 180))) and (v215==(1 -(0 + 0)))) then v172=1 -0;break;end end break;end end end if (((247 + 3686)>(4138 -(610 + 511))) and (v172==(1251 -(83 + 1166)))) then for v224=v173,v69 do local v225=1423 -(688 + 735);local v226;while true do if (((2692 -(55 + 7))>(4147 -2636)) and (v225==(0 -0))) then v226=(0 -0) -0;while true do if (((2028 + 2758)<=(3148 + 1697)) and (v226==(911 -(319 + 592)))) then v176=v176 + 1 + 0;v86[v224]=v174[v176];break;end end break;end end end break;end end break;end if (((2789 + 524)>=(728 + 287)) and (v171==(2 -1))) then local v204=0 + 0;while true do if ((v204==(0 + 0)) or ((4687 -3255)==(5911 -(317 + 1590)))) then v174=nil;v175=nil;v204=(3 -2) -0;end if (((10089 -5917)>=(822 + 860)) and (v204==(1 + 0 + 0))) then v171=4 -2;break;end end end end end elseif (((3770 -2000)>(394 -125)) and (v89==(7 + 19))) then local v177=(2510 -1859) -(264 + 387);local v178;local v179;local v180;local v181;while true do if (((838 -160)==(1537 -859)) and (v177==(1432 -(88 + 1342)))) then while true do if (((6707 -4535)<=(5138 -(102 + 39))) and (v178==(2 + 0))) then for v227=1 + 0 + 0,v88[4] do local v228=0 + 0;local v229;local v230;while true do if (((1419 -878)<(4609 -2229)) and (v228==(1 + 0))) then while true do if ((v229==(1926 -(50 + 1875))) or ((1527 -(407 + 120))>(11002 -7648))) then if ((v230[1 + 0]==(3 + (1 -0))) or (((5265 + 962) -(1033 + 881))<=(1521 -(436 + 19)))) then v181[v227-(1550 -((3655 -2522) + 416))]={v86,v230[1948 -(1080 + 865)]};else v181[v227-(782 -(719 + 62))]={v36,v230[1380 -(206 + 1171)]};end v85[ #v85 + 1 + 0]=v181;break;end if (((1196 -(410 + 786))==v229) or ((587 + 313 + 3867)<=(4379 -(693 + 220)))) then v68=v68 + (200 -(20 + 179));v230=v80[v68];v229=110 -(7 + 102);end end break;end if (((801 -(786 + 15))==v228) or (2881>=(4767 -(3667 -2863)))) then v229=1981 -((3834 -1875) + 22);v230=nil;v228=1186 -(509 + 676);end end end v86[v88[4 -(1153 -(1083 + 68))]]=v29(v179,v180,v37);break;end if ((4676>=(153 + 311)) and (v178==(2 -1))) then v181={};v180=v9({},{__index=function(v231,v232)local v238=0 + 0;local v239;local v240;while true do if ((v238==(0 -0)) or ((1936 -(456 + 18))>(8443 -5224))) then v239=0 + 0;v240=nil;v238=1011 -(567 + 443);end if (((10304 -7158)==(1022 + 2124)) and (v238==(2 -1))) then while true do if ((((2391 -942) + 3398)>(968 -(135 + 695))) and (v239==(0 + 0))) then local v268=0 -0;local v269;while true do if ((v268==(0 + 0)) or (((2232 -(916 + 129)) + 1891)==(7737 -4051))) then v269=0 + 0;while true do if (((3422 + 27)>(5006 -2472)) and (v269==(0 + 0))) then v240=v181[v232];return v240[1 + 0][v240[4 -2]];end end break;end end end end break;end end end,__newindex=function(v233,v234,v235)local v241=0 + 0;local v242;local v243;while true do if ((v241==(1 + 0)) or ((305 + 109)>=(1933 + 1276))) then while true do if (((2490 -1441)<(4038 -(187 + 468 + 13))) and (v242==(1701 -(1069 + 14 + 618)))) then v243=v181[v234];v243[1333 -(911 + 421)][v243[2]]=v235;break;end end break;end if (((2510 -(405 + 131))<=(4352 -1838)) and (v241==(207 -(182 + 25)))) then v242=0 -0;v243=nil;v241=1 + 0;end end end});v178=1263 -(233 + 1028);end if ((v178==(0 -0)) or ((5635 -(909 + (317 -(49 + 204))))==(726 + 61))) then v179=v81[v88[3]];v180=nil;v178=2 -(2 -1);end end break;end if (((942 + 1367)<(444 + 3284)) and (v177==(0 + 0))) then v178=0 + 0;v179=nil;v177=1 + 0;end if (((1 + 0)==v177) or ((6506 -(1759 + 205))<(6349 -2543))) then v180=nil;v181=nil;v177=1 + 1 + 0;end end else v86[v88[2 + 0]][v88[1119 -((1430 -(549 + 534)) + 769)]]=v88[2 + 2];end elseif ((v89<=(18 + 11)) or ((4817 -(820 + 250 + 39))>=(7572 -3805))) then if (((2605 -(185 + 119))==((8150 -5021) -828)) and (v89>(23 + 5))) then local v183=0 + 0;local v184;while true do if ((v183==(0 + (1057 -(948 + 109)))) or (((4853 -(357 + 1376)) -2122)>=(1191 + (1503 -(181 + 742))))) then v184=v88[1474 -(1120 + 352)];v86[v184]=v86[v184](v12(v86,v184 + (3 -(1 + 1)),v88[1149 -(711 + 435)]));break;end end else local v185=111 -(13 + 98);local v186;local v187;local v188;while true do if (((1823 + 940)>(713 + (3082 -(284 + 1644)))) and (v185==(0 -0))) then v186=0 -(0 + 0);v187=nil;v185=1204 -(704 + 114 + 385);end if (((1555 + 2943)>((4665 -(1214 + 727)) -1918)) and (v185==(1 -0))) then v188=nil;while true do if ((v186==(531 -(64 + 467))) or ((4809 -1898)>(10549 -6904))) then local v217=0 + 0;while true do if (((7428 -(18348 -14286))==(4916 -(1501 + 49))) and (v217==(1 + 0))) then v186=463 -(152 + 310);break;end if (((1499 -906)<=(2917 -1990)) and (v217==((402 -(261 + 141)) -0))) then v187=0 -(1612 -(921 + 691));v188=nil;v217=459 -(292 + 166);end end end if (((416 + 350)<(96 + 1188)) and (v186==(1 + 0))) then while true do if ((v187==(0 -0)) or (((13774 -9027) + 38)<(4130 -(1435 + 82)))) then v188=v88[1 + 1];v86[v188](v86[v188 + (2 -1)]);break;end end break;end end break;end end end elseif ((v89==((35 -25) + 20)) or ((3836 -(344 + 857))==(7290 -3321))) then v68=v88[1 + (5 -3)];else v86[v88[257 -(103 + 152)]]=v86[v88[3 + 0]][v88[3 + 1]];end v68=v68 + (688 -(4 + 683));break;end end break;end end end end;v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (3==v67) then A,B=v27(v10(v72));if  not A[1] then local v90=v35[4][v68] or "?";error("Script error at ["   .. v90   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v67==1) then v70={...};v71=v11("#",...) -1;v67=2;end end end;end;return v29(v28(),{},v16)(...);end end end vv8(),...);end
