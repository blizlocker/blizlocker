-- This file was generated using Luraph Obfuscator v13.5.9

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (6==v17) then v28=nil;function v28()local v38=0 -0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v38~=0) then else v39=0;v40=nil;v38=1 + 0;end if (v38~=4) then else while true do if ((1703 -(1089 + 612))~=v39) then else local v78=0;local v79;while true do if ((0 -0)~=v78) then else v79=0 -0;while true do if ((0 -0)==v79) then v44=nil;v45=nil;v79=1 + 0;end if ((515 -(13 + 501))==v79) then v39=10 -7;break;end end break;end end end if ((0 -0)==v39) then local v80=0 -0;while true do if ((0 + 0)~=v80) then else v40=1720 -(1249 + 471);v41=nil;v80=1;end if (v80==1) then v39=1 -0;break;end end end if (v39~=(3 -2)) then else local v81=0;while true do if (v81~=(2 -1)) then else v39=1724 -(1041 + 681);break;end if (v81==(1769 -(466 + 1303))) then local v85=0;while true do if (v85~=(0 -0)) then else v42=nil;v43=nil;v85=1 + 0;end if (1==v85) then v81=2 -1;break;end end end end end if ((5 -2)==v39) then v46=nil;while true do local v82=0;while true do if ((1 + 0)~=v82) then else if (v40~=1) then else local v100=0;local v101;while true do if (v100==0) then v101=0;while true do if (v101==(0 + 0)) then v44={v41,v42,nil,v43};v45=v23();v101=1;end if (v101==1) then v46={};v40=106 -(43 + 61);break;end end break;end end end if (v40==(10 -7)) then local v102=0;while true do local v107=0 + 0;while true do if (v107==0) then if (v102~=1) then else return v44;end if (v102~=0) then else local v117=0;while true do if (v117~=(1 + 0)) then else v102=1;break;end if (v117==(0 -0)) then local v126=0;while true do if (v126~=0) then else for v129=1,v23() do v42[v129-(1 + 0)]=v28();end for v131=793 -(210 + 582),v23() do v43[v131]=v23();end v126=1;end if (v126~=(1812 -(1788 + 23))) then else v117=4 -3;break;end end end end end break;end end end end break;end if (v82~=(1387 -(394 + 993))) then else if (v40==(738 -(177 + 561))) then local v103=0 -0;local v104;local v105;while true do if (v103~=(0 + 0)) then else v104=1406 -(1404 + 2);v105=nil;v103=1;end if (v103==1) then while true do if (v104~=(0 + 0)) then else v105=148 -(146 + 2);while true do if (v105~=1) then else v43={};v40=1930 -(1724 + 205);break;end if (v105==(37 -(26 + 11))) then local v127=0 + 0;local v128;while true do if (v127==0) then v128=0 + 0;while true do if (v128==0) then v41={};v42={};v128=1 + 0;end if (v128~=1) then else v105=1511 -(1071 + 439);break;end end break;end end end end break;end end break;end end end if (v40==(1552 -(444 + 1106))) then local v106=1768 -(1365 + 403);while true do if (v106~=(1 + 0)) then else for v111=1,v23() do local v112=0;local v113;local v114;local v115;while true do if (v112~=0) then else v113=0;v114=nil;v112=950 -(849 + 100);end if (v112~=(1 -0)) then else v115=nil;while true do if (v113~=(3 -2)) then else while true do if (v114==0) then v115=v21();if (v20(v115,1 + 0,1)~=(1950 -(506 + 1444))) then else local v135=0;local v136;local v137;local v138;local v139;local v140;while true do if (v135~=0) then else v136=0;v137=nil;v135=1 + 0;end if (v135~=(878 -(179 + 697))) then else v140=nil;while true do if (v136~=0) then else local v223=0 -0;while true do if (v223~=0) then else v137=0;v138=nil;v223=1;end if (v223==(1843 -(619 + 1223))) then v136=1 + 0;break;end end end if (v136~=2) then else while true do if ((3 + 0)~=v137) then else if (v20(v139,7 -4,3)==1) then v140[3 + 1]=v46[v140[712 -(661 + 47)]];end v41[v111]=v140;break;end if (v137==0) then local v260=0;local v261;while true do if (v260~=(0 + 0)) then else v261=1270 -(1004 + 266);while true do if (v261~=(106 -(31 + 75))) then else v138=v20(v115,2,3);v139=v20(v115,4,10 -4);v261=1;end if ((1 + 0)==v261) then v137=1;break;end end break;end end end if (v137~=(2 + 0)) then else local v262=0;while true do if ((0 + 0)~=v262) then else local v281=0;while true do if (v281~=1) then else v262=3 -2;break;end if ((0 + 0)~=v281) then else if (v20(v139,1 + 0,1 + 0)==(1338 -(658 + 679))) then v140[2]=v46[v140[2]];end if (v20(v139,3 -1,1843 -(358 + 1483))~=(194 -(180 + 13))) then else v140[3]=v46[v140[3]];end v281=457 -(100 + 356);end end end if ((1 + 0)==v262) then v137=3;break;end end end if (v137==(365 -(40 + 324))) then local v263=0 + 0;local v264;while true do if (v263~=(1805 -(1354 + 451))) then else v264=0;while true do if (v264==(3 -2)) then v137=2;break;end if (v264~=0) then else v140={v22(),v22(),nil,nil};if (v138==(0 -0)) then local v294=0 + 0;local v295;local v296;while true do if (v294==0) then v295=0;v296=nil;v294=1;end if (1==v294) then while true do if (v295==0) then v296=0;while true do if (v296~=(0 -0)) then else v140[937 -(641 + 293)]=v22();v140[1037 -(778 + 255)]=v22();break;end end break;end end break;end end elseif (v138==1) then v140[3]=v23();elseif (v138==2) then v140[3]=v23() -(2^16);elseif (v138==(1 + 2)) then local v317=0 + 0;local v318;while true do if (v317~=0) then else v318=0;while true do if (v318==(0 + 0)) then v140[3]=v23() -((1 + 1)^16);v140[3 + 1]=v22();break;end end break;end end end v264=1;end end break;end end end end break;end if (v136==(1 + 0)) then local v224=0 -0;while true do if (v224~=(0 -0)) then else v139=nil;v140=nil;v224=2 -1;end if (v224==(1 -0)) then v136=1 + 1;break;end end end end break;end if (v135~=1) then else v138=nil;v139=nil;v135=2;end end end break;end end break;end if (v113==0) then v114=0;v115=nil;v113=1;end end break;end end end v40=3;break;end if (v106==(0 -0)) then local v110=0;while true do if (v110~=(0 + 0)) then else for v119=1464 -(992 + 471),v45 do local v120=1306 -(711 + 595);local v121;local v122;local v123;local v124;local v125;while true do if (0~=v120) then else v121=0;v122=nil;v120=1 -0;end if (v120~=(921 -(384 + 535))) then else v125=nil;while true do if (v121~=0) then else local v133=0 -0;while true do if (v133~=(0 -0)) then else v122=0 -0;v123=nil;v133=1;end if (v133==(2 -1)) then v121=1;break;end end end if (v121==2) then while true do if (v122~=1) then else v125=nil;while true do if (0~=v123) then else local v221=0;while true do if (v221==1) then v123=1;break;end if (v221~=0) then else local v242=0;while true do if ((0 -0)~=v242) then else v124=v21();v125=nil;v242=1 + 0;end if (v242==1) then v221=3 -2;break;end end end end end if (v123==1) then if (v124==1) then v125=v21()~=0;elseif (v124==(2 + 0)) then v125=v24();elseif (v124==(178 -(87 + 88))) then v125=v25();end v46[v119]=v125;break;end end break;end if (v122==(0 -0)) then v123=0 + 0;v124=nil;v122=1;end end break;end if (v121==1) then local v134=0 + 0;while true do if (v134==(0 -0)) then v124=nil;v125=nil;v134=1;end if (v134==1) then v121=1865 -(28 + 1835);break;end end end end break;end if ((1 -0)~=v120) then else v123=nil;v124=nil;v120=1 + 1;end end end v44[7 -4]=v21();v110=1;end if (v110~=1) then else v106=1 -0;break;end end end end end v82=1 -0;end end end break;end end break;end if (v38==3) then v45=nil;v46=nil;v38=4;end if (v38~=2) then else v43=nil;v44=nil;v38=760 -(510 + 247);end if (v38==1) then v41=nil;v42=nil;v38=7 -5;end end end v29=nil;v17=7;end if (v17==4) then function v24()local v47=969 -((383 -221) + 807);local v48;local v49;while true do if (v47==1) then return (( -(254 -(33 + (1319 -(324 + 776)))) * v20(v49,(4 + 43) -15)) + (1071 -(17 + 1053))) * (2^(v20(v49,(74 -38) -15,509 -(48 + 430)) -(2235 -1212))) * ((((v20(v49,1 + 0,5 + 15) * ((1941 -(690 + 1249))^(55 -23))) + v48)/((528 -(63 + 463))^(179 -(234 -107)))) + 1);end if (v47==(0 -0)) then v48=v23();v49=v23();v47=2 -1;end end end v25=nil;function v25(v30)local v50;if  not v30 then local v65=0 -0;while true do if (v65==(0 -(666 -(127 + 539)))) then v30=v23();if (v30==(97 -(9 + 3 + 85))) then return "";end break;end end end v50=v3(v15,v18,(v18 + v30) -((2 + 0) -1));v18=v18 + v30;local v51={};for v63=2 -1, #v50 do v51[v63]=v2(v1(v3(v50,v63,v63)));end return v6(v51);end v17=5;end if (v17==7) then function v29(v31,v32,v33)local v52=0;local v53;local v54;local v55;while true do if (v52==0) then v53=v31[1];v54=v31[2];v52=1;end if (v52==1) then v55=v31[3];return function(...)local v72=0;local v73;local v74;local v75;local v76;local v77;while true do if (v72==2) then v77=nil;function v77()local v86=v53;local v87=v54;local v88=v55;local v89=v27;local v90={};local v91={};local v92={};for v97=0 -0,v76 do if ((v97>=v88) or ((2657 -1094)>(5736 -4152))) then v90[v97-v88]=v75[v97 + (542 -(92 + 449))];else v92[v97]=v75[v97 + (4 -3)];end end local v93=(v76-v88) + (257 -((889 -(569 + 244)) + 180));local v94;local v95;while true do local v98=(29 + 1295) -(425 + 899);local v99;while true do if (((1125 -(13 + 45))<=(15515 -10725)) and (v98==((984 -(716 + 268)) + 0))) then v99=0 -0;while true do if ((v99==(1 + 0)) or ((766 + 329)>=(3135 -(800 + 490)))) then if (((941 -(25 + 77))==(3129 -2290)) and (v95<=(8 + 7))) then if (((8826 -(14536 -8246))>(6840 -5011)) and (v95<=(6 + 1))) then if (((690 -(201 + (22 -16)))<=((3677 -(257 + 1485)) -387)) and (v95<=(3 -(0 -0)))) then if ((v95<=(1 + 0)) or ((3878 -(177 + 1113))>=(5365 -(706 + 1066)))) then if ((v95==(718 -(172 + 546))) or ((8568 -4135)<(9344 -7019))) then v92[v94[1985 -(1443 + 540)]][v94[11 -8]]=v92[v94[2 + 2]];else v92[v94[5 -3]]=v29(v87[v94[7 -4]],nil,v33);end elseif (((1070 -534)<=(1558 + 562)) and (v95>((178 -(15 + 158)) -3))) then v92[v94[1578 -(363 + 1213)]]=v92[v94[3 -0]][v94[3 + (911 -(832 + 78))]];else v92[v94[2 + 0 + 0]]=v94[3 + 0];end elseif (((4963 -(488 + 1298))>=(54 + 82)) and (v95<=(1216 -(1049 + 162)))) then if ((((1135 + 2327) -(599 + 138))==((6682 -(151 + 210)) -3596)) and (v95==(13 -9))) then local v145=0 + 0 + 0;local v146;local v147;local v148;while true do if ((v145==((40 + 26) -(17 + 48))) or ((1357 -(180 + 768))>=(1623 -507))) then v148=nil;while true do if ((v146==(2 -1)) or ((2504 -(14 + (1667 -(555 + 253))))==(6140 -3027))) then while true do if (((931 + 877)>(4453 -(14661 -11409))) and ((0 -0)==v147)) then v148=v94[5 -3];do return v12(v92,v148,v74);end break;end end break;end if ((((1151 -841) + 3928)>(259 + 722)) and ((0 -0)==v146)) then v147=1807 -(542 + 1265);v148=nil;v146=(7 -5) -1;end end break;end if ((v145==(0 -0)) or ((1284 -645)<(1234 -(1010 + 13)))) then v146=(2206 -1300) -(282 + 624);v147=nil;v145=1 + 0;end end else local v149=0 -0;local v150;local v151;local v152;while true do if ((v149==(1744 -(1226 + 517))) or ((3 + 20)==(6009 -(642 + 919)))) then v152=nil;while true do if (((8757 -5464)<=(4523 -(91 + 123 + 661))) and (v150==((0 -0) + 0))) then local v225=0 -0;while true do if (((9007 -4939)>=(891 -(20 + 8))) and ((0 + 0)==v225)) then v151=324 -(103 + 221);v152=nil;v225=821 -(328 + 492);end if (((1274 + 2126)>(7883 -5557)) and (v225==(1 -0))) then v150=413 -(100 + 312);break;end end end if ((v150==(1 + 0)) or ((157 -99)>(141 + 256))) then while true do if ((v151==((420 + 295) -(131 + 584))) or ((676 -358)>=(6239 -2686))) then v152=v94[1344 -((2506 -(1601 + 172)) + 609)];v92[v152]=v92[v152](v92[v152 + (2 -1)]);break;end end break;end end break;end if ((v149==(0 -(1604 -(968 + 636)))) or ((4723 -(1331 + 492))>=(9807 -6527))) then v150=235 -((665 -466) + 36);v151=nil;v149=2 -1;end end end elseif ((v95>(1859 -((1419 -(690 + 102)) + 1226))) or ((1863 -(989 + 250))<=(452 -355))) then local v153=503 -((1337 -936) + 102);local v154;local v155;local v156;local v157;local v158;while true do if (((11227 -8484)<=((8790 -5727) + 1714)) and (v153==(0 + 0))) then v154=0;v155=nil;v153=1 + 0;end if (((4366 -((1384 -(512 + 663)) + 817))>(905 + 34)) and (v153==(1 + 0))) then v156=nil;v157=nil;v153=1036 -(715 + 319);end if (((5281 -2180)<=(5391 -(178 + 356))) and ((1 + 1)==v153)) then v158=nil;while true do if ((v154==(1 + 1)) or ((5037 -(8037 -4721))==(5898 -(1855 + 99)))) then while true do if ((v155==(6 -4)) or ((7741 -3275)<(1661 -(171 + 460)))) then for v272=1 -0,v94[7 -3] do local v273=0 -(0 + 0);local v274;local v275;local v276;while true do if (((13630 -8893)>(1393 + 350)) and (v273==(1 + 0))) then v276=nil;while true do if (((2457 -(288 + 1165))<=(8866 -5740)) and (v274==(0 + 0))) then local v286=0 + 0;while true do if ((0==v286) or ((8638 -5389)<(10989 -7939))) then v275=0 + 0 + 0;v276=nil;v286=119 -(96 + 22);end if ((v286==(565 -(11 + 329 + 224))) or ((747 + 3441)<(14260 -10864))) then v274=1;break;end end end if (((2002 -1192)<(3038 + 306)) and (v274==(1 -0))) then while true do if (((1732 -(103 + (3527 -2096)))==(496 -298)) and (v275==(0 -0))) then local v310=0 -0;local v311;while true do if ((v310==(0 + (0 -0))) or (360>(8537 -3654))) then v311=0;while true do if (((1443 -282)<=(5833 -(1477 + 510))) and (v311==(212 -(118 + 93)))) then v275=1;break;end if (((0 + 0)==v311) or ((400 + 1713)<=(640 + 105))) then local v321=0 -0;while true do if (((52 -(15 + (102 -65)))==v321) or (((35970 -28400) -3297)<((6592 -(969 + 302)) -(1370 + 25)))) then v73=v73 + (295 -(207 + 87));v276=v86[v73];v321=3 -2;end if ((v321==(2 -1)) or ((290 + 1112 + 2193)<=(26 + 32))) then v311=1016 -(269 + 727 + 19);break;end end end end break;end end end if (((3 -2)==v275) or ((386 -(5 + 61))>((19164 -12616) -(501 + 1258)))) then if ((v276[2 -1]==(10 + 11)) or ((2272 -((1264 -(34 + 1017)) + 271))<(6730 -5244))) then v158[v272-(1 -0)]={v92,v276[2 + 1]};else v158[v272-(278 -(260 + 17))]={v32,v276[1 + 2]};end v91[ #v91 + 1 + 0]=v158;break;end end break;end end break;end if (((2139 -676)==(5464 -4001)) and (v273==(427 -(5 + 57 + 365)))) then v274=0 + 0;v275=nil;v273=1 -0;end end end v92[v94[2]]=v29(v156,v157,v33);break;end if ((v155==(1 + (518 -(144 + 374)))) or ((1187 -(248 + 552))<(90 + (86 -52)))) then local v267=0 + (1448 -(171 + 1277));while true do if ((v267==(1247 -(911 + 335))) or ((175 + 274)>(297 + 2993))) then v155=3 -(1337 -(259 + 1077));break;end if ((((8085 -2685) -1862)>=(3230 -623)) and (v267==(0 + 0))) then local v282=1019 -(415 + 130 + 474);while true do if (((2858 -1558)>=(843 + 14 + 6)) and (v282==(0 + (0 -0)))) then v158={};v157=v9({},{__index=function(v287,v288)local v297=411 -(62 + 349);local v298;while true do if (((5480 -(674 + 80))>=((1811 -(82 + 1449)) + 60)) and (v297==(0 + 0))) then v298=v158[v288];return v298[1 + 0 + 0][v298[1 + 1]];end end end,__newindex=function(v289,v290,v291)local v299=(1066 -(449 + 207)) -(257 + 153);local v300;local v301;while true do if (((5790 -(201 + 296 + 1453))>=(1365 -(183 + 975))) and (v299==(0 + 0))) then local v313=170 -(11 + 159);while true do if (((192 + (1455 -844))<=(12627 -9321)) and ((0 -0)==v313)) then v300=0 -0;v301=nil;v313=1 + 0;end if ((v313==(1 + 0)) or ((2132 + 63)>(1938 + 2764))) then v299=131 -(94 + (912 -(577 + 299)));break;end end end if (((921 + 117)<=(1023 + 3861)) and (v299==(2 -1))) then while true do if ((v300==0) or ((3141 -(55 + 4))>=(11770 -7366))) then v301=v158[v290];v301[2 -1][v301[1 + 1]]=v291;break;end end break;end end end});v282=1 + 0 + 0;end if (((2748 -(205 + 629))>=(518 + 255 + 144)) and (v282==(1 + 0))) then v267=1 + 0;break;end end end end end if (((4302 -(1513 + 204))<=(4804 -(2136 -701))) and (v155==(0 -0))) then local v268=1186 -(531 + 655);local v269;while true do if (((1868 + 1146 + 121)>(6903 -5019)) and (v268==0)) then v269=38 -(21 + 17);while true do if ((((5573 -2948) + 1173)>(30 + 192)) and (v269==(1 + 0))) then v155=(1 + 0) -0;break;end if ((v269==(520 -(435 + (157 -72)))) or ((1719 -(637 + 556))>=(3675 -(403 + (2583 -(22 + 1598)))))) then v156=v87[v94[182 -(134 + 45)]];v157=nil;v269=1 -0;end end break;end end end end break;end if (((3540 + 1428)>=(1868 -(112 + 3))) and (v154==(4 -3))) then v157=nil;v158=nil;v154=2 + 0;end if (((4068 -(458 + 1176))<=(4239 -(1620 + (1297 -(1135 + 69))))) and (v154==(628 -(32 + 596)))) then v155=0 -(1653 -(1049 + 604));v156=nil;v154=1351 -(48 + 20 + 1282);end end break;end end elseif ((v92[v94[2 + 0]]<v94[789 -(710 + 75)]) or ((1857 -1017)>(1298 + 484))) then v73=v73 + 1 + 0 + 0;else v73=v94[8 -5];end elseif ((v95<=(38 -27)) or ((748 + 2666)<=(6119 -2806))) then if (((5329 -1430)>(4612 -(994 + 499))) and (v95<=(9 + 0 + 0))) then if (((1723 + 1504)==(2936 + 291)) and (v95>(20 -12))) then local v159=0 -0;local v160;local v161;while true do if ((v159==(1433 -(957 + 476))) or ((2239 + 222)<(2704 -((1685 -1255) + 194)))) then v160=0 -0;v161=nil;v159=1 + 0;end if (((1 -0)==v159) or ((1288 + 1345)<=(3199 -2531))) then while true do if (((3653 -(1487 + 82))==(4133 -(1384 + 665))) and ((0 -0)==v160)) then v161=v94[1748 -(713 + 1033)];v92[v161]=v92[v161](v12(v92,v161 + 1 + 0,v94[3 -(0 -0)]));break;end end break;end end else local v162=0 + 0;local v163;local v164;while true do if ((v162==((1 -0) + 0)) or ((8498 -6484)>(778 + 3212))) then while true do if (((4149 -(188 + 82))>=(158 + 552)) and (v163==(0 -0))) then v164=v94[1 + 1];do return v92[v164](v12(v92,v164 + 1 + 0,v94[816 -(640 + 138 + 35)]));end break;end end break;end if (((3458 -(8962 -6694))==(4599 -3409)) and ((0 + 0)==v162)) then local v214=0;while true do if (((15007 -10234)==(401 + 4372)) and (v214==(0 + 0))) then v163=162 -(135 + 27);v164=nil;v214=1709 -(1027 + 681);end if (((1 + 0 + 0)==v214) or ((218 -65)>=((9671 -5352) + (403 -221)))) then v162=342 -(299 + 42);break;end end end end end elseif ((v95==(35 -25)) or ((2739 + 641)>(4585 -(97 + 1)))) then local v165=0 + 0 + 0;local v166;local v167;local v168;local v169;while true do if ((v165==(0 + 0)) or ((115 + 294)==(2868 -(712 + 242)))) then v166=1618 -(1299 + 319);v167=nil;v165=1134 -(208 + 925);end if ((v165==(472 -(56 + 415))) or ((310 + 151)==(3914 -(210 + 743)))) then local v215=1702 -((4260 -2661) + 103);while true do if ((v215==(1 + 0)) or ((284 + 444)==(4818 -(457 + 633)))) then v165=1898 -(713 + 1183);break;end if (((4999 -2015)==(12605 -9621)) and (v215==(0 -0))) then v168=nil;v169=nil;v215=1 + 0;end end end if ((((1742 + 180) -(202 + 257))==(709 + 754)) and (v165==((12 -7) -3))) then while true do if (((2291 -(652 + 699))<=(135 + 1105)) and (v166==(0 -0))) then local v227=448 -(154 + 294);local v228;while true do if ((v227==(0 -0)) or ((5284 -((154 -115) + 495))<(524 + 2320))) then v228=0 -0;while true do if ((((1764 -(515 + 308)) -485)==(135 + 321)) and (v228==((2 -1) + 0))) then v166=(4 -3) -0;break;end if ((v228==(1958 -(273 + 1685))) or ((1892 -861)>(392 + 1166 + 466))) then v167=v94[5 -3];v168={v92[v167](v12(v92,v167 + 1 + 0,v74))};v228=2 -1;end end break;end end end if ((v166==(206 -(180 + 25))) or ((5896 -(1086 + 378))<=342)) then v169=(486 + 295) -(139 + 642);for v243=v167,v94[4 + 0] do local v244=1353 -(131 + 164 + 1058);local v245;while true do if (((2289 + 460)<=(13625 -8780)) and (v244==(313 -(145 + 168)))) then v245=0 -0;while true do if (((6828 -4039)>(4373 -(1729 + 24))) and (v245==(0 -0))) then v169=v169 + (875 -(72 + 802));v92[v243]=v168[v169];break;end end break;end end end break;end end break;end end else v92[v94[1035 -(482 + 551)]]=v32[v94[673 -(251 + (953 -(89 + 445)))]];end elseif (((2752 -(241 + 1652))<(2749 -(289 + 185))) and (v95<=((918 -(38 + 873)) + 6))) then if (((2790 + (3138 -1863))>=(2972 -(302 + 287 + 203))) and (v95==(1879 -(1375 + 492)))) then local v171=1323 -(1044 + 279);local v172;local v173;while true do if ((v171==(408 -(260 + 147))) or (1176>=(7718 -4663))) then while true do if (((0 + 0)==v172) or ((440 + 115)>(8783 -4488))) then v173=v94[(2 -1) + 1];v92[v173](v92[v173 + ((1 + 0) -(0 + 0))]);break;end end break;end if ((v171==(0 -0)) or ((578 -320)==(4101 -(596 + 632)))) then v172=0 + 0;v173=nil;v171=1 + 0;end end elseif (v92[v94[1638 -(1634 + 2)]] or ((384 -(230 -113))>((21442 -(1267 + 97)) -15757))) then v73=v73 + (1524 -(222 + 1301));else v73=v94[1316 -((2817 -(1004 + 676)) + 176)];end elseif ((v95>((9291 -7344) -(525 + 1408))) or ((2096 -(312 + 687))==(10315 -6443))) then if ( not v92[v94[(1518 -(137 + 1380)) + 1]] or ((161 + 3824)>=(9413 -5213))) then v73=v73 + (1 -0);else v73=v94[1038 -(561 + 474)];end else local v174=0 + 0;local v175;local v176;while true do if (((699 + 1487 + 1162)>(1031 -313)) and (v174==(2 -1))) then while true do if (((8279 -5163)<(1486 + 3360)) and (v175==(0 -0))) then v176=v94[1789 -(200 + 1587)];v92[v176]=v92[v176](v12(v92,v176 + 1 + 0,v74));break;end end break;end if ((v174==(0 + 0)) or ((15405 -10487)<=(1593 -(554 + 532)))) then local v216=0 + 0;while true do if (((172 + 1098 + 699)>(1973 -(628 + 483))) and (v216==(1036 -(590 + 445)))) then v174=1965 -(649 + 1315);break;end if ((v216==((1794 -(971 + 823)) + 0)) or ((6338 -2675)<=(3482 -(63 + 276)))) then v175=1094 -(513 + 581);v176=nil;v216=(5 -2) -2;end end end end end elseif ((v95<=(18 + 5)) or ((2735 + 1895)==((942 -578) + 188))) then if (((120 + 4196)==((56450 -42294) -9840)) and (v95<=((1011 -(790 + 220)) + 18))) then if (((5355 -(862 + 238 + 718))>(974 -541)) and (v95<=(5 + (348 -(315 + 21))))) then if (((836 + 353)>=(411 -241)) and (v95>(9 + 6 + 1))) then v92[v94[2 + 0]][v94[266 -(84 + 179)]]=v94[9 -5];else for v212=v94[1165 -((2147 -1220) + 236)],v94[579 -((1870 -(1017 + 736)) + 459)] do v92[v212]=nil;end end elseif ((2860>(161 + 14 + 7)) and (v95>(32 -14))) then local v178=874 -(419 + 455);local v179;local v180;local v181;local v182;local v183;while true do if ((v178==(0 -0)) or ((141 + 1245)>=(11085 -7085))) then local v217=1824 -(1617 + 207);while true do if (((8635 -5731)==(408 + 2496)) and (v217==(1115 -(1073 + 42)))) then v179=0 -0;v180=nil;v217=1751 -(208 + 1542);end if (((1735 -(418 + 1316))==v217) or ((4019 -1396)==(6047 -4646))) then v178=1 -0;break;end end end if (((1717 -(432 + 748 + 489 + 47))==v178) or ((10854 -6790)==(1391 + 1868))) then local v218=1276 -(165 + 1111);while true do if ((((3961 -(1149 + 819)) -(238 + 668))<=(1874 + 657)) and (v218==(1 -0))) then v178=1 + 1;break;end if ((((17754 -9259) -5065)==((5909 -3183) + 704)) and (v218==(0 -0))) then v181=nil;v182=nil;v218=1;end end end if (((5657 -3698)==(3640 -((1533 -(628 + 880)) + 1656))) and ((5 -3)==v178)) then v183=nil;while true do if ((v179==(416 -(198 + 173 + 45))) or ((2881 -(239 + 1179))>(2738 + 1941))) then local v230=1942 -(1932 + 10);while true do if ((v230==(0 + 0)) or ((3999 + 35 + 145)<=(2762 + 554))) then local v270=0 + 0;while true do if (((4592 -((402 -222) + 274))>(5286 -3226)) and (v270==(2 -1))) then v230=1 -0;break;end if ((((2960 + 9889) -9633)==3216) and (v270==(1870 -(1301 + 569)))) then v180=v94[2];v181,v182=v89(v92[v180](v92[v180 + 1 + 0]));v270=18 -(14 + 1 + 2);end end end if (((4734 + 75)<(18092 -13231)) and (v230==((1194 -668) -(63 + 462)))) then v179=4 -3;break;end end end if ((v179==(7 -5)) or ((6093 -(1325 + 99))<=(1758 -(630 + 884)))) then for v246=v180,v74 do local v247=0 -0;while true do if (((6810 -3971)>=(4597 -2113)) and (v247==(0 + 0))) then v183=v183 + 1 + 0;v92[v246]=v181[v183];break;end end end break;end if ((v179==1) or ((3059 -1988)<(1939 -(875 + 621)))) then local v231=0 -0;while true do if ((v231==(2 -1)) or ((2190 + 440)<=(237 + 1013))) then v179=1621 -(1373 + 246);break;end if (((1359 -855)<((4183 -(857 + 162)) -1640)) and (v231==(0 + 0))) then v74=(v182 + v180) -(2 -1);v183=672 -(487 + 185);v231=1 + 0;end end end end break;end end else local v184=0 -0;local v185;while true do if (((0 + (0 -0))==v184) or ((1936 + 2057)==(1574 + 2060))) then v185=v94[1 + 1];v92[v185](v12(v92,v185 + (1 -(0 -0)),v94[4 -1]));break;end end end elseif ((v95<=(48 -(24 + 3))) or ((8263 -4453)>=(12853 -7975))) then if ((v95>(53 -33)) or (((1926 -1276) + 719)<=(2002 -1011))) then v92[v94[2 -0]]=v92[v94[2 + 1]];else v73=v94[3];end elseif ((((10399 -5535) -1760)<(11797 -7239)) and (v95==(31 -9))) then local v187=0 -0;local v188;local v189;local v190;while true do if ((v187==(4 -3)) or ((7331 -4021)>=(5395 -(296 + 787)))) then v190=nil;while true do if ((731<(5970 -3612)) and (v188==1)) then for v248=(528 -(111 + 116)) -(212 + 88), #v91 do local v249=0 + 0;local v250;local v251;local v252;while true do if ((((10470 -7277) -1373)<=(1133 + 930)) and (v249==(1432 -(480 + 951)))) then v252=nil;while true do if (((3863 -1949)>(1981 -(190 + 225))) and (v250==(0 -0))) then v251=1258 -(513 + 745);v252=nil;v250=1993 -(398 + 1594);end if ((((7046 -(1169 + 7)) -3710)<=4824) and (v250==(1 + 0))) then while true do if ((v251==(0 -0)) or ((532 + 1675)<(1207 + 308))) then v252=v91[v248];for v302=0 + 0, #v252 do local v303=0 + 0;local v304;local v305;local v306;local v307;while true do if (((1222 -(290 + 932))==v303) or ((119 -(120 -71))>(337 -266))) then v304=0 + 0 + 0;v305=nil;v303=4 -(3 + 0);end if (((503 + 1384)<(6308 -(430 + 1482))) and (v303==(5 -3))) then while true do if (((40 + 3371)>(475 + 5 + 11)) and (v304==(433 -(162 + 271)))) then local v320=0 + 0;while true do if (((2305 -(320 + 1031))==((214 -48) + 788)) and (v320==(0 -(0 -0)))) then v305=v252[v302];v306=v305[(3237 -1590) -(441 + 1205)];v320=1 + 0;end if ((v320==(2 -1)) or ((2424 -(221 + 1657))>=(2499 -1031))) then v304=1;break;end end end if (((171 + (6522 -3319))>(2225 -(217 + 802))) and (v304==(3 -2))) then v307=v305[1324 -(453 + 869)];if (((107 + 142)<(4572 -(1110 + 777))) and (v306==v92) and (v307>=v189)) then local v322=0;local v323;while true do if ((v322==(0 + 0)) or ((367 + 4448)<=(3505 -(876 + 80 + 514)))) then v323=0 + 0;while true do if ((v323==(0 -(0 -0))) or ((3159 -(353 + 292))<(98 + 24))) then v190[v307]=v306[v307];v305[1120 -(647 + 472)]=v190;break;end end break;end end end break;end end break;end if ((v303==(1604 -(5 + 1598))) or ((1898 -((1147 -(358 + 136)) + 680))>=(3830 -(357 + 2091)))) then v306=nil;v307=nil;v303=4 -2;end end end break;end end break;end end break;end if (((3014 -(1055 + 467))==(2455 -((1743 -(150 + 1317)) + 687))) and (v249==(1924 -(875 + 1049)))) then v250=0 + 0;v251=nil;v249=3 -2;end end end break;end if ((v188==((201 -(18 + 183)) -0)) or ((4146 -(203 + (5092 -3512)))>(3200 -(64 + (1811 -(274 + 1495)))))) then local v232=0 + 0;while true do if (((11509 -7442)>(5079 -(632 + 841))) and ((828 -(564 + 264))==v232)) then v189=v94[2];v190={};v232=2 -1;end if ((v232==(1 -0)) or ((296 + 971)==(15650 -11826))) then v188=1 -0;break;end end end end break;end if (((2387 -(1147 + 162))<=3394) and ((0 -0)==v187)) then v188=1681 -(581 + 1100);v189=nil;v187=825 -(672 + 152);end end else v92[v94[1274 -(410 + 862)]]=v33[v94[1608 -((2350 -1408) + 663)]];end elseif ((v95<=(619 -(365 + 227))) or ((3364 -(152 + 489))<176)) then if (((4310 -(494 + 133))>(8205 -5587)) and (v95<=(361 -(119 + 19 + 198)))) then if (((6924 -2978)==(3818 + 128)) and (v95>(83 -59))) then local v192=0 -0;local v193;local v194;local v195;local v196;local v197;while true do if (((0 + 0)==v192) or ((4990 -(40 + 175))<=(11948 -8692))) then v193=915 -(796 + (1883 -(255 + 1509)));v194=nil;v192=1 + 0;end if ((4814>=((28990 -17702) -8446)) and ((1 + 0)==v192)) then v195=nil;v196=nil;v192=1 + 1;end if (((1 + 1)==v192) or ((4990 -(1591 + 190))==(2004 -606))) then v197=nil;while true do if (((101 + (241 -163))==(905 -(188 + 538))) and (v193==0)) then local v233=405 -(209 + 196);local v234;while true do if ((v233==(0 + 0)) or (2041<=(515 + 760))) then v234=0 -0;while true do if ((4704>(1257 -(156 + 44 + 13))) and (v234==(0 -(521 -(495 + 26))))) then v194=v94[3 -1];v195,v196=v89(v92[v194](v12(v92,v194 + (2 -1),v94[(4 + 2) -3])));v234=1 + 0 + 0;end if (((121 + 978)<=(9113 -4684)) and (v234==(187 -(138 + 48)))) then v193=2 -1;break;end end break;end end end if (((170 + 379 + 1179)==(3266 -(87 + 1451))) and (v193==(2 -1))) then local v235=(0 -0) + 0;local v236;while true do if ((v235==(393 -(281 + 112))) or ((11245 -6518)<(33 + 34))) then v236=1358 -(437 + 921);while true do if ((v236==(1826 -(1542 + 283))) or ((5596 -(3942 -1451))>=4500)) then v193=(1873 -(1393 + 479)) + 1;break;end if (((844 + 2994)>((5777 -(237 + 650)) -((550 -(207 + 253)) + 1366))) and (v236==((1199 -(458 + 741)) + 0))) then local v283=0 -0;while true do if (((167 -(8 + 22))<(3936 -(6 + 1068))) and (v283==(1 + 0))) then v236=2 -1;break;end if ((v283==(1792 -(51 + 1741))) or ((2329 -(471 + (1343 -(145 + 113))))>(106 + 451 + (6771 -3692)))) then v74=(v196 + v194) -((1150 -(730 + 419)) + 0);v197=0 + 0;v283=3 -(6 -4);end end end end break;end end end if (((1446 + 1632)<=(2733 + 495)) and (v193==(1 + 1 + 0))) then for v253=v194,v74 do local v254=0;local v255;while true do if ((0==v254) or (((10614 -6359) -(182 + (2079 -1457)))<=(2333 -1713))) then v255=0 -0;while true do if ((v255==(760 -(375 + (1186 -801)))) or ((844 + 164)>=(1712 + 157))) then v197=v197 + (1130 -((1863 -(330 + 1255)) + 851));v92[v253]=v195[v197];break;end end break;end end end break;end end break;end end elseif ((v94[5 -3]==v92[v94[19 -15]]) or (((2574 + 1143) -(3178 -(1102 + 81)))>=(2331 -(61 + 4)))) then v73=v73 + (3 -(3 -1));else v73=v94[1640 -(338 + 1299)];end elseif ((v95>(65 -39)) or ((958 -408)>(2971 -(204 + 546)))) then local v198=0 -0;local v199;local v200;local v201;local v202;local v203;local v204;while true do if (((4 -3)==v198) or ((4127 -2327)<=(671 + 15 + 4 + 173))) then v201=nil;v202=nil;v198=2 + 0;end if (((9 -7)==v198) or ((1053 -385)>(6616 -(382 + 1570)))) then v203=nil;v204=nil;v198=2 + 1;end if (((10820 -5998)>=(12658 -8319)) and (v198==0)) then v199=985 -(53 + 932);v200=nil;v198=1 + 0;end if ((((10955 -6773) -(37 + 9))>=(6461 -5102)) and (v198==(1 + 2))) then while true do if (((3711 -(184 + 410))<(7528 -2576)) and (v199==(0 -0))) then v200=v94[3 -1];v201=v94[1111 -(681 + (884 -(420 + 38)))];v199=1 + 0;end if ((v199==(2 + 0)) or ((2110 -(179 + 91))<=(26 + 30))) then local v237=(0 + 0) -0;while true do if ((v237==(0 + 0)) or ((5091 -(1638 + 186))<(1187 -501))) then for v278=2 -(1781 -(1631 + 149)),v201 do v92[v202 + v278]=v203[v278];end v204=v203[(7 -4) -2];v237=1343 -(1016 + 326);end if ((v237==((73 + 176) -(141 + 107))) or ((5425 -(295 + 1041))<(13232 -9465))) then v199=10 -7;break;end end end if (((747 + 581 + 198)==(916 + 610)) and ((1 + 2)==v199)) then if (v204 or ((1909 -(160 + 384))==(4 + 5))) then local v256=799 -(754 + 45);local v257;local v258;while true do if ((v256==(0 -0)) or ((2113 -918)>(3346 -(1067 + 182)))) then v257=(240 + 28) -(242 + 26);v258=nil;v256=1905 -((2504 -1099) + 499);end if ((v256==(1 + 0)) or ((3815 -2540)>=((19249 -(161 + 112)) -14536))) then while true do if ((v257==((1087 -(101 + 986)) + 0)) or ((2657 -(764 + 465))<=((2992 -1484) -(1481 + 8)))) then v258=0 -0;while true do if ((((5316 -(298 + 68)) -(175 + 200))>=(2497 + 1)) and ((0 -0)==v258)) then v92[v202]=v204;v73=v94[7 -(7 -3)];break;end end break;end end break;end end else v73=v73 + 1 + 0;end break;end if (((335 -213)<=(351 + 75)) and (v199==(1 + 0))) then v202=v200 + (1806 -(1561 + 243));v203={v92[v200](v92[v200 + 1 + 0],v92[v202])};v199=2 + 0;end end break;end end else v92[v94[2 + 0]]();end elseif ((4447>(3081 -(156 + 795))) and (v95<=(84 -55))) then if (((5852 -3770)>=(2994 -(389 + 1236))) and (v95>((13 + 43) -(10 + 18)))) then local v205=1992 -(605 + 1387);local v206;local v207;local v208;while true do if ((v205==(0 -0)) or ((338 -(56 + 79))<(50 + 62))) then local v219=308 -(35 + 273);while true do if (((9686 -6061)>(539 -209)) and (v219==(457 -((939 -561) + 79)))) then v206=0 + 0;v207=nil;v219=1 + 0;end if (((2340 + 2182)<((31536 -24850) -(1047 + 732))) and (v219==(491 -(449 + 41)))) then v205=911 -(70 + 840);break;end end end if ((v205==(1 + 0)) or ((8335 -5412)<=(748 + 522))) then v208=nil;while true do if ((v206==(166 -(119 + 47))) or ((2683 + 160)>=(5919 -((643 -(37 + 137)) + 1523)))) then local v238=930 -(641 + 28 + 261);while true do if (((2769 -(566 + 327))<=(16060 -12253)) and (v238==1)) then v206=2 -1;break;end if ((v238==(0 -0)) or ((12003 -7863)<(2145 + 306))) then local v271=0 -0;while true do if ((v271==(1 + 0)) or ((13008 -8432)<(7724 -4615))) then v238=1 -0;break;end if (((2976 + 54)<=(436 + 2673)) and ((1349 -(263 + 1086))==v271)) then v207=v94[2 + 0];v208=v92[v94[1291 -(601 + (1077 -(167 + 223)))]];v271=813 -(662 + 24 + 126);end end end end end if ((v206==((20 + 288) -(291 + 16))) or ((4873 -(14 + 49))<(5526 -2470))) then v92[v207 + (432 -((852 -(318 + 173)) + 70))]=v208;v92[v207]=v208[v94[1 + 3]];break;end end break;end end else do return;end end elseif ((v95>(141 -111)) or (((500 + 325) -639)>=(2366 -550))) then if (((4348 -(1249 + 246))<((6806 -(682 + 229)) -(741 + 613 + 617))) and (v92[v94[2 + 0]]==v94[7 -3])) then v73=v73 + 1 + 0;else v73=v94[585 -(381 + 201)];end else local v209=0 -0;local v210;local v211;while true do if ((2420>((16101 -9285) -5056)) and (v209==0)) then local v220=0 -0;while true do if (((1312 -((118 -82) + 559))==(698 + 19)) and (v220==(927 -(445 + 482)))) then v210=0 -0;v211=nil;v220=2 -1;end if ((v220==(1 + 0)) or ((1868 + 806)>=(4062 -(27 + 562 + 170)))) then v209=1 + 0;break;end end end if ((v209==(1 + 0 + 0)) or (926==(608 + (304 -120)))) then while true do if (((2911 -1263)<(4239 -1727)) and (v210==(0 -0))) then v211=v94[2 + 0];v92[v211]=v92[v211]();break;end end break;end end end v73=v73 + 1 + 0;break;end if (((2865 -(636 + 170))==(1174 + 885)) and (v99==(0 -(0 + 0)))) then local v116=0 + 0;while true do if (((3829 -(248 + 1327))<=(11065 -6122)) and (v116==(461 -(340 + 121)))) then v94=v86[v73];v95=v94[816 -(182 + 633)];v116=1 -0;end if ((4299==4299) and (v116==(3 -2))) then v99=1 + 0;break;end end end end break;end end end end v72=3;end if (v72==1) then v75={...};v76=v11("#",...) -1;v72=2;end if (0==v72) then v73=1;v74= -1;v72=1;end if (v72==3) then A,B=v27(v10(v77));if  not A[1] then local v96=v31[4][v73] or "?";error("Script error at ["   .. v96   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end end end return v29(v28(),{},v16)(...);end if (v17==1) then v20=nil;function v20(v34,v35,v36)if v36 then local v66=0 + 0;local v67;while true do if (v66==(0 -0)) then v67=(v34/((2 -0)^(v35-1)))%(2^(((v36-(1343 -(759 + 13 + 570))) -(v35-(314 -(162 + (1541 -(425 + 965)))))) + (3 -2)));return v67-(v67%(2 -1));end end else local v68=0;local v69;while true do if ((1091 -(81 + 1010))==v68) then v69=(4 -2)^(v35-1);return (((v34%(v69 + v69))>=v69) and (1 + 0)) or (0 -0);end end end end v21=nil;v17=2;end if (3==v17) then v23=nil;function v23()local v56,v57,v58,v59=v1(v15,v18,v18 + 3);v18=v18 + 2 + 2;return (v59 * (7742263 + 9034953)) + (v58 * (59861 + 5675)) + (v57 * (146 + 110)) + v56;end v24=nil;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v70=0;local v71;while true do if (v70==0) then v71=v2(v0(v37,16));if v19 then local v83=0;local v84;while true do if (v83==0) then v84=v5(v71,v19);v19=nil;v83=1;end if (v83==1) then return v84;end end else return v71;end break;end end end end);v17=1;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==2) then function v21()local v60=v1(v15,v18,v18);v18=v18 + 1;return v60;end v22=nil;function v22()local v61,v62=v1(v15,v18,v18 + 1 + 1);v18=v18 + 2;return (v62 * (654 -398)) + v61;end v17=3;end end end vv8(),...);end
